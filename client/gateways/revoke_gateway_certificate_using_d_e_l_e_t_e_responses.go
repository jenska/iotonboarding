// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RevokeGatewayCertificateUsingDELETEReader is a Reader for the RevokeGatewayCertificateUsingDELETE structure.
type RevokeGatewayCertificateUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeGatewayCertificateUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRevokeGatewayCertificateUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeGatewayCertificateUsingDELETEBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeGatewayCertificateUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevokeGatewayCertificateUsingDELETEOK creates a RevokeGatewayCertificateUsingDELETEOK with default headers values
func NewRevokeGatewayCertificateUsingDELETEOK() *RevokeGatewayCertificateUsingDELETEOK {
	return &RevokeGatewayCertificateUsingDELETEOK{}
}

/*RevokeGatewayCertificateUsingDELETEOK handles this case with default header values.

Successfully revoked gateway certificate.
*/
type RevokeGatewayCertificateUsingDELETEOK struct {
	Payload *RevokeGatewayCertificateUsingDELETEOKBody
}

func (o *RevokeGatewayCertificateUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/gateways/{gatewayId}/authentications/clientCertificate/{fingerprint}][%d] revokeGatewayCertificateUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *RevokeGatewayCertificateUsingDELETEOK) GetPayload() *RevokeGatewayCertificateUsingDELETEOKBody {
	return o.Payload
}

func (o *RevokeGatewayCertificateUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RevokeGatewayCertificateUsingDELETEOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeGatewayCertificateUsingDELETEBadRequest creates a RevokeGatewayCertificateUsingDELETEBadRequest with default headers values
func NewRevokeGatewayCertificateUsingDELETEBadRequest() *RevokeGatewayCertificateUsingDELETEBadRequest {
	return &RevokeGatewayCertificateUsingDELETEBadRequest{}
}

/*RevokeGatewayCertificateUsingDELETEBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type RevokeGatewayCertificateUsingDELETEBadRequest struct {
	Payload *RevokeGatewayCertificateUsingDELETEBadRequestBody
}

func (o *RevokeGatewayCertificateUsingDELETEBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/gateways/{gatewayId}/authentications/clientCertificate/{fingerprint}][%d] revokeGatewayCertificateUsingDELETEBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeGatewayCertificateUsingDELETEBadRequest) GetPayload() *RevokeGatewayCertificateUsingDELETEBadRequestBody {
	return o.Payload
}

func (o *RevokeGatewayCertificateUsingDELETEBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RevokeGatewayCertificateUsingDELETEBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeGatewayCertificateUsingDELETENotFound creates a RevokeGatewayCertificateUsingDELETENotFound with default headers values
func NewRevokeGatewayCertificateUsingDELETENotFound() *RevokeGatewayCertificateUsingDELETENotFound {
	return &RevokeGatewayCertificateUsingDELETENotFound{}
}

/*RevokeGatewayCertificateUsingDELETENotFound handles this case with default header values.

Certificate does not exist.
*/
type RevokeGatewayCertificateUsingDELETENotFound struct {
	Payload *RevokeGatewayCertificateUsingDELETENotFoundBody
}

func (o *RevokeGatewayCertificateUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/gateways/{gatewayId}/authentications/clientCertificate/{fingerprint}][%d] revokeGatewayCertificateUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *RevokeGatewayCertificateUsingDELETENotFound) GetPayload() *RevokeGatewayCertificateUsingDELETENotFoundBody {
	return o.Payload
}

func (o *RevokeGatewayCertificateUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RevokeGatewayCertificateUsingDELETENotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*RevokeGatewayCertificateUsingDELETEBadRequestBody Response
swagger:model RevokeGatewayCertificateUsingDELETEBadRequestBody
*/
type RevokeGatewayCertificateUsingDELETEBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this revoke gateway certificate using d e l e t e bad request body
func (o *RevokeGatewayCertificateUsingDELETEBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RevokeGatewayCertificateUsingDELETEBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("revokeGatewayCertificateUsingDELETEBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RevokeGatewayCertificateUsingDELETEBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RevokeGatewayCertificateUsingDELETEBadRequestBody) UnmarshalBinary(b []byte) error {
	var res RevokeGatewayCertificateUsingDELETEBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RevokeGatewayCertificateUsingDELETENotFoundBody Response
swagger:model RevokeGatewayCertificateUsingDELETENotFoundBody
*/
type RevokeGatewayCertificateUsingDELETENotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this revoke gateway certificate using d e l e t e not found body
func (o *RevokeGatewayCertificateUsingDELETENotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RevokeGatewayCertificateUsingDELETENotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("revokeGatewayCertificateUsingDELETENotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RevokeGatewayCertificateUsingDELETENotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RevokeGatewayCertificateUsingDELETENotFoundBody) UnmarshalBinary(b []byte) error {
	var res RevokeGatewayCertificateUsingDELETENotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RevokeGatewayCertificateUsingDELETEOKBody Response
swagger:model RevokeGatewayCertificateUsingDELETEOKBody
*/
type RevokeGatewayCertificateUsingDELETEOKBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this revoke gateway certificate using d e l e t e o k body
func (o *RevokeGatewayCertificateUsingDELETEOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RevokeGatewayCertificateUsingDELETEOKBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("revokeGatewayCertificateUsingDELETEOK"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RevokeGatewayCertificateUsingDELETEOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RevokeGatewayCertificateUsingDELETEOKBody) UnmarshalBinary(b []byte) error {
	var res RevokeGatewayCertificateUsingDELETEOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
