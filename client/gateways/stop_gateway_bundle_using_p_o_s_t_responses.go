// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StopGatewayBundleUsingPOSTReader is a Reader for the StopGatewayBundleUsingPOST structure.
type StopGatewayBundleUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StopGatewayBundleUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStopGatewayBundleUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStopGatewayBundleUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStopGatewayBundleUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStopGatewayBundleUsingPOSTOK creates a StopGatewayBundleUsingPOSTOK with default headers values
func NewStopGatewayBundleUsingPOSTOK() *StopGatewayBundleUsingPOSTOK {
	return &StopGatewayBundleUsingPOSTOK{}
}

/*StopGatewayBundleUsingPOSTOK handles this case with default header values.

Successfully stopped the bundle.
*/
type StopGatewayBundleUsingPOSTOK struct {
	Payload *StopGatewayBundleUsingPOSTOKBody
}

func (o *StopGatewayBundleUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /v1/tenant/{tenantId}/gateways/{gatewayId}/bundles/{bundleId}/stop][%d] stopGatewayBundleUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *StopGatewayBundleUsingPOSTOK) GetPayload() *StopGatewayBundleUsingPOSTOKBody {
	return o.Payload
}

func (o *StopGatewayBundleUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StopGatewayBundleUsingPOSTOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopGatewayBundleUsingPOSTBadRequest creates a StopGatewayBundleUsingPOSTBadRequest with default headers values
func NewStopGatewayBundleUsingPOSTBadRequest() *StopGatewayBundleUsingPOSTBadRequest {
	return &StopGatewayBundleUsingPOSTBadRequest{}
}

/*StopGatewayBundleUsingPOSTBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type StopGatewayBundleUsingPOSTBadRequest struct {
	Payload *StopGatewayBundleUsingPOSTBadRequestBody
}

func (o *StopGatewayBundleUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/tenant/{tenantId}/gateways/{gatewayId}/bundles/{bundleId}/stop][%d] stopGatewayBundleUsingPOSTBadRequest  %+v", 400, o.Payload)
}

func (o *StopGatewayBundleUsingPOSTBadRequest) GetPayload() *StopGatewayBundleUsingPOSTBadRequestBody {
	return o.Payload
}

func (o *StopGatewayBundleUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StopGatewayBundleUsingPOSTBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStopGatewayBundleUsingPOSTNotFound creates a StopGatewayBundleUsingPOSTNotFound with default headers values
func NewStopGatewayBundleUsingPOSTNotFound() *StopGatewayBundleUsingPOSTNotFound {
	return &StopGatewayBundleUsingPOSTNotFound{}
}

/*StopGatewayBundleUsingPOSTNotFound handles this case with default header values.

Gateway with specified id does not exist.
*/
type StopGatewayBundleUsingPOSTNotFound struct {
	Payload *StopGatewayBundleUsingPOSTNotFoundBody
}

func (o *StopGatewayBundleUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/tenant/{tenantId}/gateways/{gatewayId}/bundles/{bundleId}/stop][%d] stopGatewayBundleUsingPOSTNotFound  %+v", 404, o.Payload)
}

func (o *StopGatewayBundleUsingPOSTNotFound) GetPayload() *StopGatewayBundleUsingPOSTNotFoundBody {
	return o.Payload
}

func (o *StopGatewayBundleUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StopGatewayBundleUsingPOSTNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*StopGatewayBundleUsingPOSTBadRequestBody Response
swagger:model StopGatewayBundleUsingPOSTBadRequestBody
*/
type StopGatewayBundleUsingPOSTBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this stop gateway bundle using p o s t bad request body
func (o *StopGatewayBundleUsingPOSTBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StopGatewayBundleUsingPOSTBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("stopGatewayBundleUsingPOSTBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StopGatewayBundleUsingPOSTBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StopGatewayBundleUsingPOSTBadRequestBody) UnmarshalBinary(b []byte) error {
	var res StopGatewayBundleUsingPOSTBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*StopGatewayBundleUsingPOSTNotFoundBody Response
swagger:model StopGatewayBundleUsingPOSTNotFoundBody
*/
type StopGatewayBundleUsingPOSTNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this stop gateway bundle using p o s t not found body
func (o *StopGatewayBundleUsingPOSTNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StopGatewayBundleUsingPOSTNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("stopGatewayBundleUsingPOSTNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StopGatewayBundleUsingPOSTNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StopGatewayBundleUsingPOSTNotFoundBody) UnmarshalBinary(b []byte) error {
	var res StopGatewayBundleUsingPOSTNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*StopGatewayBundleUsingPOSTOKBody BundleInfoBean
swagger:model StopGatewayBundleUsingPOSTOKBody
*/
type StopGatewayBundleUsingPOSTOKBody struct {

	// A unique identifier of a OSGi bundle. Is generated by the system. This field is an immutable.
	ID string `json:"id,omitempty"`

	// The name of the OSGi bundle
	// Required: true
	Name *string `json:"name"`

	// The current state of the OSGi bundle
	// Enum: [active starting stopping resolved installed uninstalled]
	State string `json:"state,omitempty"`
}

// Validate validates this stop gateway bundle using p o s t o k body
func (o *StopGatewayBundleUsingPOSTOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StopGatewayBundleUsingPOSTOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("stopGatewayBundleUsingPOSTOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

var stopGatewayBundleUsingPOSTOKBodyTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["active","starting","stopping","resolved","installed","uninstalled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		stopGatewayBundleUsingPOSTOKBodyTypeStatePropEnum = append(stopGatewayBundleUsingPOSTOKBodyTypeStatePropEnum, v)
	}
}

const (

	// StopGatewayBundleUsingPOSTOKBodyStateActive captures enum value "active"
	StopGatewayBundleUsingPOSTOKBodyStateActive string = "active"

	// StopGatewayBundleUsingPOSTOKBodyStateStarting captures enum value "starting"
	StopGatewayBundleUsingPOSTOKBodyStateStarting string = "starting"

	// StopGatewayBundleUsingPOSTOKBodyStateStopping captures enum value "stopping"
	StopGatewayBundleUsingPOSTOKBodyStateStopping string = "stopping"

	// StopGatewayBundleUsingPOSTOKBodyStateResolved captures enum value "resolved"
	StopGatewayBundleUsingPOSTOKBodyStateResolved string = "resolved"

	// StopGatewayBundleUsingPOSTOKBodyStateInstalled captures enum value "installed"
	StopGatewayBundleUsingPOSTOKBodyStateInstalled string = "installed"

	// StopGatewayBundleUsingPOSTOKBodyStateUninstalled captures enum value "uninstalled"
	StopGatewayBundleUsingPOSTOKBodyStateUninstalled string = "uninstalled"
)

// prop value enum
func (o *StopGatewayBundleUsingPOSTOKBody) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, stopGatewayBundleUsingPOSTOKBodyTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *StopGatewayBundleUsingPOSTOKBody) validateState(formats strfmt.Registry) error {

	if swag.IsZero(o.State) { // not required
		return nil
	}

	// value enum
	if err := o.validateStateEnum("stopGatewayBundleUsingPOSTOK"+"."+"state", "body", o.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StopGatewayBundleUsingPOSTOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StopGatewayBundleUsingPOSTOKBody) UnmarshalBinary(b []byte) error {
	var res StopGatewayBundleUsingPOSTOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
