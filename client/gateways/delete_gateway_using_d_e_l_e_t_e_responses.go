// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeleteGatewayUsingDELETEReader is a Reader for the DeleteGatewayUsingDELETE structure.
type DeleteGatewayUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteGatewayUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteGatewayUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteGatewayUsingDELETEBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteGatewayUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteGatewayUsingDELETEOK creates a DeleteGatewayUsingDELETEOK with default headers values
func NewDeleteGatewayUsingDELETEOK() *DeleteGatewayUsingDELETEOK {
	return &DeleteGatewayUsingDELETEOK{}
}

/*DeleteGatewayUsingDELETEOK handles this case with default header values.

Successfully deleted gateway.
*/
type DeleteGatewayUsingDELETEOK struct {
	Payload *DeleteGatewayUsingDELETEOKBody
}

func (o *DeleteGatewayUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/gateways/{gatewayId}][%d] deleteGatewayUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeleteGatewayUsingDELETEOK) GetPayload() *DeleteGatewayUsingDELETEOKBody {
	return o.Payload
}

func (o *DeleteGatewayUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteGatewayUsingDELETEOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGatewayUsingDELETEBadRequest creates a DeleteGatewayUsingDELETEBadRequest with default headers values
func NewDeleteGatewayUsingDELETEBadRequest() *DeleteGatewayUsingDELETEBadRequest {
	return &DeleteGatewayUsingDELETEBadRequest{}
}

/*DeleteGatewayUsingDELETEBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type DeleteGatewayUsingDELETEBadRequest struct {
	Payload *DeleteGatewayUsingDELETEBadRequestBody
}

func (o *DeleteGatewayUsingDELETEBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/gateways/{gatewayId}][%d] deleteGatewayUsingDELETEBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteGatewayUsingDELETEBadRequest) GetPayload() *DeleteGatewayUsingDELETEBadRequestBody {
	return o.Payload
}

func (o *DeleteGatewayUsingDELETEBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteGatewayUsingDELETEBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteGatewayUsingDELETENotFound creates a DeleteGatewayUsingDELETENotFound with default headers values
func NewDeleteGatewayUsingDELETENotFound() *DeleteGatewayUsingDELETENotFound {
	return &DeleteGatewayUsingDELETENotFound{}
}

/*DeleteGatewayUsingDELETENotFound handles this case with default header values.

Gateway with specified id does not exist.
*/
type DeleteGatewayUsingDELETENotFound struct {
	Payload *DeleteGatewayUsingDELETENotFoundBody
}

func (o *DeleteGatewayUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/gateways/{gatewayId}][%d] deleteGatewayUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeleteGatewayUsingDELETENotFound) GetPayload() *DeleteGatewayUsingDELETENotFoundBody {
	return o.Payload
}

func (o *DeleteGatewayUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteGatewayUsingDELETENotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteGatewayUsingDELETEBadRequestBody Response
swagger:model DeleteGatewayUsingDELETEBadRequestBody
*/
type DeleteGatewayUsingDELETEBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete gateway using d e l e t e bad request body
func (o *DeleteGatewayUsingDELETEBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteGatewayUsingDELETEBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteGatewayUsingDELETEBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteGatewayUsingDELETEBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteGatewayUsingDELETEBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteGatewayUsingDELETEBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteGatewayUsingDELETENotFoundBody Response
swagger:model DeleteGatewayUsingDELETENotFoundBody
*/
type DeleteGatewayUsingDELETENotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete gateway using d e l e t e not found body
func (o *DeleteGatewayUsingDELETENotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteGatewayUsingDELETENotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteGatewayUsingDELETENotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteGatewayUsingDELETENotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteGatewayUsingDELETENotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteGatewayUsingDELETENotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteGatewayUsingDELETEOKBody Response
swagger:model DeleteGatewayUsingDELETEOKBody
*/
type DeleteGatewayUsingDELETEOKBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete gateway using d e l e t e o k body
func (o *DeleteGatewayUsingDELETEOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteGatewayUsingDELETEOKBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteGatewayUsingDELETEOK"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteGatewayUsingDELETEOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteGatewayUsingDELETEOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteGatewayUsingDELETEOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
