// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateGatewayUsingPUTReader is a Reader for the UpdateGatewayUsingPUT structure.
type UpdateGatewayUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateGatewayUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateGatewayUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateGatewayUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateGatewayUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateGatewayUsingPUTOK creates a UpdateGatewayUsingPUTOK with default headers values
func NewUpdateGatewayUsingPUTOK() *UpdateGatewayUsingPUTOK {
	return &UpdateGatewayUsingPUTOK{}
}

/*UpdateGatewayUsingPUTOK handles this case with default header values.

Successfully updated gateway.
*/
type UpdateGatewayUsingPUTOK struct {
	Payload *UpdateGatewayUsingPUTOKBody
}

func (o *UpdateGatewayUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /v1/tenant/{tenantId}/gateways/{gatewayId}][%d] updateGatewayUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateGatewayUsingPUTOK) GetPayload() *UpdateGatewayUsingPUTOKBody {
	return o.Payload
}

func (o *UpdateGatewayUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateGatewayUsingPUTOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGatewayUsingPUTBadRequest creates a UpdateGatewayUsingPUTBadRequest with default headers values
func NewUpdateGatewayUsingPUTBadRequest() *UpdateGatewayUsingPUTBadRequest {
	return &UpdateGatewayUsingPUTBadRequest{}
}

/*UpdateGatewayUsingPUTBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type UpdateGatewayUsingPUTBadRequest struct {
	Payload *UpdateGatewayUsingPUTBadRequestBody
}

func (o *UpdateGatewayUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/tenant/{tenantId}/gateways/{gatewayId}][%d] updateGatewayUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateGatewayUsingPUTBadRequest) GetPayload() *UpdateGatewayUsingPUTBadRequestBody {
	return o.Payload
}

func (o *UpdateGatewayUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateGatewayUsingPUTBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateGatewayUsingPUTNotFound creates a UpdateGatewayUsingPUTNotFound with default headers values
func NewUpdateGatewayUsingPUTNotFound() *UpdateGatewayUsingPUTNotFound {
	return &UpdateGatewayUsingPUTNotFound{}
}

/*UpdateGatewayUsingPUTNotFound handles this case with default header values.

Gateway with specified id does not exist.
*/
type UpdateGatewayUsingPUTNotFound struct {
	Payload *UpdateGatewayUsingPUTNotFoundBody
}

func (o *UpdateGatewayUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/tenant/{tenantId}/gateways/{gatewayId}][%d] updateGatewayUsingPUTNotFound  %+v", 404, o.Payload)
}

func (o *UpdateGatewayUsingPUTNotFound) GetPayload() *UpdateGatewayUsingPUTNotFoundBody {
	return o.Payload
}

func (o *UpdateGatewayUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateGatewayUsingPUTNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateGatewayUsingPUTBadRequestBody Response
swagger:model UpdateGatewayUsingPUTBadRequestBody
*/
type UpdateGatewayUsingPUTBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this update gateway using p u t bad request body
func (o *UpdateGatewayUsingPUTBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateGatewayUsingPUTBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("updateGatewayUsingPUTBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTBadRequestBody) UnmarshalBinary(b []byte) error {
	var res UpdateGatewayUsingPUTBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateGatewayUsingPUTBody GatewayBean
swagger:model UpdateGatewayUsingPUTBody
*/
type UpdateGatewayUsingPUTBody struct {

	// The alternate ID of IoT gateway.
	// Read Only: true
	AlternateID string `json:"alternateId,omitempty"`

	// Unix time in milliseconds. The timestamp indicates when the IoT Gateway was added to the platform. This field is immutable.
	// Read Only: true
	// Format: date-time
	CreationTimestamp strfmt.DateTime `json:"creationTimestamp,omitempty"`

	// A set of user defined properties represented as key value pair.
	CustomProperties []*UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0 `json:"customProperties"`

	// A unique identifier of IoT Gateway. Is generated by the system. This field is immutable.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The name of IoT Gateway
	// Required: true
	Name *string `json:"name"`

	// Information about the operating system, where the IoT Gateway is running like name, version and architecture.
	// Read Only: true
	OperatingSystem string `json:"operatingSystem,omitempty"`

	// Id of the protocol supported by the gateway
	// Required: true
	// Read Only: true
	ProtocolID string `json:"protocolId"`

	// The status of the IoT Gateway. This field is immutable.
	// Read Only: true
	// Enum: [online offline unknown]
	Status string `json:"status,omitempty"`

	// The type of the IoT Gateway. This field is immutable.
	// Read Only: true
	// Enum: [cloud edge]
	Type string `json:"type,omitempty"`

	// The version of the IoT Gateway.
	// Read Only: true
	Version string `json:"version,omitempty"`
}

// Validate validates this update gateway using p u t body
func (o *UpdateGatewayUsingPUTBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreationTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProtocolID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateGatewayUsingPUTBody) validateCreationTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.CreationTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("request"+"."+"creationTimestamp", "body", "date-time", o.CreationTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *UpdateGatewayUsingPUTBody) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomProperties) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomProperties); i++ {
		if swag.IsZero(o.CustomProperties[i]) { // not required
			continue
		}

		if o.CustomProperties[i] != nil {
			if err := o.CustomProperties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("request" + "." + "customProperties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *UpdateGatewayUsingPUTBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("request"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *UpdateGatewayUsingPUTBody) validateProtocolID(formats strfmt.Registry) error {

	if err := validate.RequiredString("request"+"."+"protocolId", "body", string(o.ProtocolID)); err != nil {
		return err
	}

	return nil
}

var updateGatewayUsingPUTBodyTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["online","offline","unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateGatewayUsingPUTBodyTypeStatusPropEnum = append(updateGatewayUsingPUTBodyTypeStatusPropEnum, v)
	}
}

const (

	// UpdateGatewayUsingPUTBodyStatusOnline captures enum value "online"
	UpdateGatewayUsingPUTBodyStatusOnline string = "online"

	// UpdateGatewayUsingPUTBodyStatusOffline captures enum value "offline"
	UpdateGatewayUsingPUTBodyStatusOffline string = "offline"

	// UpdateGatewayUsingPUTBodyStatusUnknown captures enum value "unknown"
	UpdateGatewayUsingPUTBodyStatusUnknown string = "unknown"
)

// prop value enum
func (o *UpdateGatewayUsingPUTBody) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateGatewayUsingPUTBodyTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *UpdateGatewayUsingPUTBody) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("request"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

var updateGatewayUsingPUTBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["cloud","edge"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateGatewayUsingPUTBodyTypeTypePropEnum = append(updateGatewayUsingPUTBodyTypeTypePropEnum, v)
	}
}

const (

	// UpdateGatewayUsingPUTBodyTypeCloud captures enum value "cloud"
	UpdateGatewayUsingPUTBodyTypeCloud string = "cloud"

	// UpdateGatewayUsingPUTBodyTypeEdge captures enum value "edge"
	UpdateGatewayUsingPUTBodyTypeEdge string = "edge"
)

// prop value enum
func (o *UpdateGatewayUsingPUTBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateGatewayUsingPUTBodyTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *UpdateGatewayUsingPUTBody) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("request"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTBody) UnmarshalBinary(b []byte) error {
	var res UpdateGatewayUsingPUTBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateGatewayUsingPUTNotFoundBody Response
swagger:model UpdateGatewayUsingPUTNotFoundBody
*/
type UpdateGatewayUsingPUTNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this update gateway using p u t not found body
func (o *UpdateGatewayUsingPUTNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateGatewayUsingPUTNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("updateGatewayUsingPUTNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UpdateGatewayUsingPUTNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateGatewayUsingPUTOKBody GatewayBean
swagger:model UpdateGatewayUsingPUTOKBody
*/
type UpdateGatewayUsingPUTOKBody struct {

	// The alternate ID of IoT gateway.
	// Read Only: true
	AlternateID string `json:"alternateId,omitempty"`

	// Unix time in milliseconds. The timestamp indicates when the IoT Gateway was added to the platform. This field is immutable.
	// Read Only: true
	// Format: date-time
	CreationTimestamp strfmt.DateTime `json:"creationTimestamp,omitempty"`

	// A set of user defined properties represented as key value pair.
	CustomProperties []*UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0 `json:"customProperties"`

	// A unique identifier of IoT Gateway. Is generated by the system. This field is immutable.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The name of IoT Gateway
	// Required: true
	Name *string `json:"name"`

	// Information about the operating system, where the IoT Gateway is running like name, version and architecture.
	// Read Only: true
	OperatingSystem string `json:"operatingSystem,omitempty"`

	// Id of the protocol supported by the gateway
	// Required: true
	// Read Only: true
	ProtocolID string `json:"protocolId"`

	// The status of the IoT Gateway. This field is immutable.
	// Read Only: true
	// Enum: [online offline unknown]
	Status string `json:"status,omitempty"`

	// The type of the IoT Gateway. This field is immutable.
	// Read Only: true
	// Enum: [cloud edge]
	Type string `json:"type,omitempty"`

	// The version of the IoT Gateway.
	// Read Only: true
	Version string `json:"version,omitempty"`
}

// Validate validates this update gateway using p u t o k body
func (o *UpdateGatewayUsingPUTOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreationTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProtocolID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateGatewayUsingPUTOKBody) validateCreationTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.CreationTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("updateGatewayUsingPUTOK"+"."+"creationTimestamp", "body", "date-time", o.CreationTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *UpdateGatewayUsingPUTOKBody) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomProperties) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomProperties); i++ {
		if swag.IsZero(o.CustomProperties[i]) { // not required
			continue
		}

		if o.CustomProperties[i] != nil {
			if err := o.CustomProperties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("updateGatewayUsingPUTOK" + "." + "customProperties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *UpdateGatewayUsingPUTOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("updateGatewayUsingPUTOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *UpdateGatewayUsingPUTOKBody) validateProtocolID(formats strfmt.Registry) error {

	if err := validate.RequiredString("updateGatewayUsingPUTOK"+"."+"protocolId", "body", string(o.ProtocolID)); err != nil {
		return err
	}

	return nil
}

var updateGatewayUsingPUTOKBodyTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["online","offline","unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateGatewayUsingPUTOKBodyTypeStatusPropEnum = append(updateGatewayUsingPUTOKBodyTypeStatusPropEnum, v)
	}
}

const (

	// UpdateGatewayUsingPUTOKBodyStatusOnline captures enum value "online"
	UpdateGatewayUsingPUTOKBodyStatusOnline string = "online"

	// UpdateGatewayUsingPUTOKBodyStatusOffline captures enum value "offline"
	UpdateGatewayUsingPUTOKBodyStatusOffline string = "offline"

	// UpdateGatewayUsingPUTOKBodyStatusUnknown captures enum value "unknown"
	UpdateGatewayUsingPUTOKBodyStatusUnknown string = "unknown"
)

// prop value enum
func (o *UpdateGatewayUsingPUTOKBody) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateGatewayUsingPUTOKBodyTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *UpdateGatewayUsingPUTOKBody) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("updateGatewayUsingPUTOK"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

var updateGatewayUsingPUTOKBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["cloud","edge"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		updateGatewayUsingPUTOKBodyTypeTypePropEnum = append(updateGatewayUsingPUTOKBodyTypeTypePropEnum, v)
	}
}

const (

	// UpdateGatewayUsingPUTOKBodyTypeCloud captures enum value "cloud"
	UpdateGatewayUsingPUTOKBodyTypeCloud string = "cloud"

	// UpdateGatewayUsingPUTOKBodyTypeEdge captures enum value "edge"
	UpdateGatewayUsingPUTOKBodyTypeEdge string = "edge"
)

// prop value enum
func (o *UpdateGatewayUsingPUTOKBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, updateGatewayUsingPUTOKBodyTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *UpdateGatewayUsingPUTOKBody) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("updateGatewayUsingPUTOK"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTOKBody) UnmarshalBinary(b []byte) error {
	var res UpdateGatewayUsingPUTOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0 CustomPropertyBean
swagger:model UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0
*/
type UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0 struct {

	// A unique identifier of a custom property. Is defined by the user. This field is an immutable.
	// Required: true
	Key *string `json:"key"`

	// Value of the custom property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this update gateway using p u t o k body custom properties items0
func (o *UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", o.Key); err != nil {
		return err
	}

	return nil
}

func (o *UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0) UnmarshalBinary(b []byte) error {
	var res UpdateGatewayUsingPUTOKBodyCustomPropertiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0 CustomPropertyBean
swagger:model UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0
*/
type UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0 struct {

	// A unique identifier of a custom property. Is defined by the user. This field is an immutable.
	// Required: true
	Key *string `json:"key"`

	// Value of the custom property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this update gateway using p u t params body custom properties items0
func (o *UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", o.Key); err != nil {
		return err
	}

	return nil
}

func (o *UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0) UnmarshalBinary(b []byte) error {
	var res UpdateGatewayUsingPUTParamsBodyCustomPropertiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
