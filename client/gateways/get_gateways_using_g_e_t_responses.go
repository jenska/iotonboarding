// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetGatewaysUsingGETReader is a Reader for the GetGatewaysUsingGET structure.
type GetGatewaysUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGatewaysUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGatewaysUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGatewaysUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGatewaysUsingGETOK creates a GetGatewaysUsingGETOK with default headers values
func NewGetGatewaysUsingGETOK() *GetGatewaysUsingGETOK {
	return &GetGatewaysUsingGETOK{}
}

/*GetGatewaysUsingGETOK handles this case with default header values.

Successfully returned gateways.
*/
type GetGatewaysUsingGETOK struct {
	Payload []*GetGatewaysUsingGETOKBodyItems0
}

func (o *GetGatewaysUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /v1/tenant/{tenantId}/gateways][%d] getGatewaysUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetGatewaysUsingGETOK) GetPayload() []*GetGatewaysUsingGETOKBodyItems0 {
	return o.Payload
}

func (o *GetGatewaysUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewaysUsingGETBadRequest creates a GetGatewaysUsingGETBadRequest with default headers values
func NewGetGatewaysUsingGETBadRequest() *GetGatewaysUsingGETBadRequest {
	return &GetGatewaysUsingGETBadRequest{}
}

/*GetGatewaysUsingGETBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type GetGatewaysUsingGETBadRequest struct {
	Payload *GetGatewaysUsingGETBadRequestBody
}

func (o *GetGatewaysUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/tenant/{tenantId}/gateways][%d] getGatewaysUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetGatewaysUsingGETBadRequest) GetPayload() *GetGatewaysUsingGETBadRequestBody {
	return o.Payload
}

func (o *GetGatewaysUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetGatewaysUsingGETBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetGatewaysUsingGETBadRequestBody Response
swagger:model GetGatewaysUsingGETBadRequestBody
*/
type GetGatewaysUsingGETBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get gateways using g e t bad request body
func (o *GetGatewaysUsingGETBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGatewaysUsingGETBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getGatewaysUsingGETBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGatewaysUsingGETBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGatewaysUsingGETBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetGatewaysUsingGETBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGatewaysUsingGETOKBodyItems0 GatewayBean
swagger:model GetGatewaysUsingGETOKBodyItems0
*/
type GetGatewaysUsingGETOKBodyItems0 struct {

	// The alternate ID of IoT gateway.
	// Read Only: true
	AlternateID string `json:"alternateId,omitempty"`

	// Unix time in milliseconds. The timestamp indicates when the IoT Gateway was added to the platform. This field is immutable.
	// Read Only: true
	// Format: date-time
	CreationTimestamp strfmt.DateTime `json:"creationTimestamp,omitempty"`

	// A set of user defined properties represented as key value pair.
	CustomProperties []*GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0 `json:"customProperties"`

	// A unique identifier of IoT Gateway. Is generated by the system. This field is immutable.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The name of IoT Gateway
	// Required: true
	Name *string `json:"name"`

	// Information about the operating system, where the IoT Gateway is running like name, version and architecture.
	// Read Only: true
	OperatingSystem string `json:"operatingSystem,omitempty"`

	// Id of the protocol supported by the gateway
	// Required: true
	// Read Only: true
	ProtocolID string `json:"protocolId"`

	// The status of the IoT Gateway. This field is immutable.
	// Read Only: true
	// Enum: [online offline unknown]
	Status string `json:"status,omitempty"`

	// The type of the IoT Gateway. This field is immutable.
	// Read Only: true
	// Enum: [cloud edge]
	Type string `json:"type,omitempty"`

	// The version of the IoT Gateway.
	// Read Only: true
	Version string `json:"version,omitempty"`
}

// Validate validates this get gateways using g e t o k body items0
func (o *GetGatewaysUsingGETOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreationTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProtocolID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGatewaysUsingGETOKBodyItems0) validateCreationTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.CreationTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("creationTimestamp", "body", "date-time", o.CreationTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetGatewaysUsingGETOKBodyItems0) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomProperties) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomProperties); i++ {
		if swag.IsZero(o.CustomProperties[i]) { // not required
			continue
		}

		if o.CustomProperties[i] != nil {
			if err := o.CustomProperties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("customProperties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetGatewaysUsingGETOKBodyItems0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetGatewaysUsingGETOKBodyItems0) validateProtocolID(formats strfmt.Registry) error {

	if err := validate.RequiredString("protocolId", "body", string(o.ProtocolID)); err != nil {
		return err
	}

	return nil
}

var getGatewaysUsingGETOKBodyItems0TypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["online","offline","unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getGatewaysUsingGETOKBodyItems0TypeStatusPropEnum = append(getGatewaysUsingGETOKBodyItems0TypeStatusPropEnum, v)
	}
}

const (

	// GetGatewaysUsingGETOKBodyItems0StatusOnline captures enum value "online"
	GetGatewaysUsingGETOKBodyItems0StatusOnline string = "online"

	// GetGatewaysUsingGETOKBodyItems0StatusOffline captures enum value "offline"
	GetGatewaysUsingGETOKBodyItems0StatusOffline string = "offline"

	// GetGatewaysUsingGETOKBodyItems0StatusUnknown captures enum value "unknown"
	GetGatewaysUsingGETOKBodyItems0StatusUnknown string = "unknown"
)

// prop value enum
func (o *GetGatewaysUsingGETOKBodyItems0) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getGatewaysUsingGETOKBodyItems0TypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetGatewaysUsingGETOKBodyItems0) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

var getGatewaysUsingGETOKBodyItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["cloud","edge"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getGatewaysUsingGETOKBodyItems0TypeTypePropEnum = append(getGatewaysUsingGETOKBodyItems0TypeTypePropEnum, v)
	}
}

const (

	// GetGatewaysUsingGETOKBodyItems0TypeCloud captures enum value "cloud"
	GetGatewaysUsingGETOKBodyItems0TypeCloud string = "cloud"

	// GetGatewaysUsingGETOKBodyItems0TypeEdge captures enum value "edge"
	GetGatewaysUsingGETOKBodyItems0TypeEdge string = "edge"
)

// prop value enum
func (o *GetGatewaysUsingGETOKBodyItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getGatewaysUsingGETOKBodyItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetGatewaysUsingGETOKBodyItems0) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGatewaysUsingGETOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGatewaysUsingGETOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetGatewaysUsingGETOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0 CustomPropertyBean
swagger:model GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0
*/
type GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0 struct {

	// A unique identifier of a custom property. Is defined by the user. This field is an immutable.
	// Required: true
	Key *string `json:"key"`

	// Value of the custom property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this get gateways using g e t o k body items0 custom properties items0
func (o *GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", o.Key); err != nil {
		return err
	}

	return nil
}

func (o *GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0) UnmarshalBinary(b []byte) error {
	var res GetGatewaysUsingGETOKBodyItems0CustomPropertiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
