// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewDeleteGatewayBundleUsingDELETEParams creates a new DeleteGatewayBundleUsingDELETEParams object
// with the default values initialized.
func NewDeleteGatewayBundleUsingDELETEParams() *DeleteGatewayBundleUsingDELETEParams {
	var ()
	return &DeleteGatewayBundleUsingDELETEParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewDeleteGatewayBundleUsingDELETEParamsWithTimeout creates a new DeleteGatewayBundleUsingDELETEParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewDeleteGatewayBundleUsingDELETEParamsWithTimeout(timeout time.Duration) *DeleteGatewayBundleUsingDELETEParams {
	var ()
	return &DeleteGatewayBundleUsingDELETEParams{

		timeout: timeout,
	}
}

// NewDeleteGatewayBundleUsingDELETEParamsWithContext creates a new DeleteGatewayBundleUsingDELETEParams object
// with the default values initialized, and the ability to set a context for a request
func NewDeleteGatewayBundleUsingDELETEParamsWithContext(ctx context.Context) *DeleteGatewayBundleUsingDELETEParams {
	var ()
	return &DeleteGatewayBundleUsingDELETEParams{

		Context: ctx,
	}
}

// NewDeleteGatewayBundleUsingDELETEParamsWithHTTPClient creates a new DeleteGatewayBundleUsingDELETEParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewDeleteGatewayBundleUsingDELETEParamsWithHTTPClient(client *http.Client) *DeleteGatewayBundleUsingDELETEParams {
	var ()
	return &DeleteGatewayBundleUsingDELETEParams{
		HTTPClient: client,
	}
}

/*DeleteGatewayBundleUsingDELETEParams contains all the parameters to send to the API endpoint
for the delete gateway bundle using d e l e t e operation typically these are written to a http.Request
*/
type DeleteGatewayBundleUsingDELETEParams struct {

	/*BundleID
	  Unique identifier of an OSGi bundle

	*/
	BundleID string
	/*GatewayID
	  Unique identifier of a gateway.

	*/
	GatewayID string
	/*TenantID
	  Unique identifier of a tenant.

	*/
	TenantID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) WithTimeout(timeout time.Duration) *DeleteGatewayBundleUsingDELETEParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) WithContext(ctx context.Context) *DeleteGatewayBundleUsingDELETEParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) WithHTTPClient(client *http.Client) *DeleteGatewayBundleUsingDELETEParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBundleID adds the bundleID to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) WithBundleID(bundleID string) *DeleteGatewayBundleUsingDELETEParams {
	o.SetBundleID(bundleID)
	return o
}

// SetBundleID adds the bundleId to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) SetBundleID(bundleID string) {
	o.BundleID = bundleID
}

// WithGatewayID adds the gatewayID to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) WithGatewayID(gatewayID string) *DeleteGatewayBundleUsingDELETEParams {
	o.SetGatewayID(gatewayID)
	return o
}

// SetGatewayID adds the gatewayId to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) SetGatewayID(gatewayID string) {
	o.GatewayID = gatewayID
}

// WithTenantID adds the tenantID to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) WithTenantID(tenantID string) *DeleteGatewayBundleUsingDELETEParams {
	o.SetTenantID(tenantID)
	return o
}

// SetTenantID adds the tenantId to the delete gateway bundle using d e l e t e params
func (o *DeleteGatewayBundleUsingDELETEParams) SetTenantID(tenantID string) {
	o.TenantID = tenantID
}

// WriteToRequest writes these params to a swagger request
func (o *DeleteGatewayBundleUsingDELETEParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param bundleId
	if err := r.SetPathParam("bundleId", o.BundleID); err != nil {
		return err
	}

	// path param gatewayId
	if err := r.SetPathParam("gatewayId", o.GatewayID); err != nil {
		return err
	}

	// path param tenantId
	if err := r.SetPathParam("tenantId", o.TenantID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
