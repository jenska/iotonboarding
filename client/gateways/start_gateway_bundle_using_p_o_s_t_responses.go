// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// StartGatewayBundleUsingPOSTReader is a Reader for the StartGatewayBundleUsingPOST structure.
type StartGatewayBundleUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartGatewayBundleUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewStartGatewayBundleUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewStartGatewayBundleUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewStartGatewayBundleUsingPOSTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewStartGatewayBundleUsingPOSTOK creates a StartGatewayBundleUsingPOSTOK with default headers values
func NewStartGatewayBundleUsingPOSTOK() *StartGatewayBundleUsingPOSTOK {
	return &StartGatewayBundleUsingPOSTOK{}
}

/*StartGatewayBundleUsingPOSTOK handles this case with default header values.

Successfully started the bundle.
*/
type StartGatewayBundleUsingPOSTOK struct {
	Payload *StartGatewayBundleUsingPOSTOKBody
}

func (o *StartGatewayBundleUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /v1/tenant/{tenantId}/gateways/{gatewayId}/bundles/{bundleId}/start][%d] startGatewayBundleUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *StartGatewayBundleUsingPOSTOK) GetPayload() *StartGatewayBundleUsingPOSTOKBody {
	return o.Payload
}

func (o *StartGatewayBundleUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StartGatewayBundleUsingPOSTOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartGatewayBundleUsingPOSTBadRequest creates a StartGatewayBundleUsingPOSTBadRequest with default headers values
func NewStartGatewayBundleUsingPOSTBadRequest() *StartGatewayBundleUsingPOSTBadRequest {
	return &StartGatewayBundleUsingPOSTBadRequest{}
}

/*StartGatewayBundleUsingPOSTBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type StartGatewayBundleUsingPOSTBadRequest struct {
	Payload *StartGatewayBundleUsingPOSTBadRequestBody
}

func (o *StartGatewayBundleUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/tenant/{tenantId}/gateways/{gatewayId}/bundles/{bundleId}/start][%d] startGatewayBundleUsingPOSTBadRequest  %+v", 400, o.Payload)
}

func (o *StartGatewayBundleUsingPOSTBadRequest) GetPayload() *StartGatewayBundleUsingPOSTBadRequestBody {
	return o.Payload
}

func (o *StartGatewayBundleUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StartGatewayBundleUsingPOSTBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartGatewayBundleUsingPOSTNotFound creates a StartGatewayBundleUsingPOSTNotFound with default headers values
func NewStartGatewayBundleUsingPOSTNotFound() *StartGatewayBundleUsingPOSTNotFound {
	return &StartGatewayBundleUsingPOSTNotFound{}
}

/*StartGatewayBundleUsingPOSTNotFound handles this case with default header values.

Gateway with specified id does not exist.
*/
type StartGatewayBundleUsingPOSTNotFound struct {
	Payload *StartGatewayBundleUsingPOSTNotFoundBody
}

func (o *StartGatewayBundleUsingPOSTNotFound) Error() string {
	return fmt.Sprintf("[POST /v1/tenant/{tenantId}/gateways/{gatewayId}/bundles/{bundleId}/start][%d] startGatewayBundleUsingPOSTNotFound  %+v", 404, o.Payload)
}

func (o *StartGatewayBundleUsingPOSTNotFound) GetPayload() *StartGatewayBundleUsingPOSTNotFoundBody {
	return o.Payload
}

func (o *StartGatewayBundleUsingPOSTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(StartGatewayBundleUsingPOSTNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*StartGatewayBundleUsingPOSTBadRequestBody Response
swagger:model StartGatewayBundleUsingPOSTBadRequestBody
*/
type StartGatewayBundleUsingPOSTBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this start gateway bundle using p o s t bad request body
func (o *StartGatewayBundleUsingPOSTBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StartGatewayBundleUsingPOSTBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("startGatewayBundleUsingPOSTBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StartGatewayBundleUsingPOSTBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StartGatewayBundleUsingPOSTBadRequestBody) UnmarshalBinary(b []byte) error {
	var res StartGatewayBundleUsingPOSTBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*StartGatewayBundleUsingPOSTNotFoundBody Response
swagger:model StartGatewayBundleUsingPOSTNotFoundBody
*/
type StartGatewayBundleUsingPOSTNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this start gateway bundle using p o s t not found body
func (o *StartGatewayBundleUsingPOSTNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StartGatewayBundleUsingPOSTNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("startGatewayBundleUsingPOSTNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StartGatewayBundleUsingPOSTNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StartGatewayBundleUsingPOSTNotFoundBody) UnmarshalBinary(b []byte) error {
	var res StartGatewayBundleUsingPOSTNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*StartGatewayBundleUsingPOSTOKBody BundleInfoBean
swagger:model StartGatewayBundleUsingPOSTOKBody
*/
type StartGatewayBundleUsingPOSTOKBody struct {

	// A unique identifier of a OSGi bundle. Is generated by the system. This field is an immutable.
	ID string `json:"id,omitempty"`

	// The name of the OSGi bundle
	// Required: true
	Name *string `json:"name"`

	// The current state of the OSGi bundle
	// Enum: [active starting stopping resolved installed uninstalled]
	State string `json:"state,omitempty"`
}

// Validate validates this start gateway bundle using p o s t o k body
func (o *StartGatewayBundleUsingPOSTOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateState(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *StartGatewayBundleUsingPOSTOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("startGatewayBundleUsingPOSTOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

var startGatewayBundleUsingPOSTOKBodyTypeStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["active","starting","stopping","resolved","installed","uninstalled"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		startGatewayBundleUsingPOSTOKBodyTypeStatePropEnum = append(startGatewayBundleUsingPOSTOKBodyTypeStatePropEnum, v)
	}
}

const (

	// StartGatewayBundleUsingPOSTOKBodyStateActive captures enum value "active"
	StartGatewayBundleUsingPOSTOKBodyStateActive string = "active"

	// StartGatewayBundleUsingPOSTOKBodyStateStarting captures enum value "starting"
	StartGatewayBundleUsingPOSTOKBodyStateStarting string = "starting"

	// StartGatewayBundleUsingPOSTOKBodyStateStopping captures enum value "stopping"
	StartGatewayBundleUsingPOSTOKBodyStateStopping string = "stopping"

	// StartGatewayBundleUsingPOSTOKBodyStateResolved captures enum value "resolved"
	StartGatewayBundleUsingPOSTOKBodyStateResolved string = "resolved"

	// StartGatewayBundleUsingPOSTOKBodyStateInstalled captures enum value "installed"
	StartGatewayBundleUsingPOSTOKBodyStateInstalled string = "installed"

	// StartGatewayBundleUsingPOSTOKBodyStateUninstalled captures enum value "uninstalled"
	StartGatewayBundleUsingPOSTOKBodyStateUninstalled string = "uninstalled"
)

// prop value enum
func (o *StartGatewayBundleUsingPOSTOKBody) validateStateEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, startGatewayBundleUsingPOSTOKBodyTypeStatePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *StartGatewayBundleUsingPOSTOKBody) validateState(formats strfmt.Registry) error {

	if swag.IsZero(o.State) { // not required
		return nil
	}

	// value enum
	if err := o.validateStateEnum("startGatewayBundleUsingPOSTOK"+"."+"state", "body", o.State); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *StartGatewayBundleUsingPOSTOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *StartGatewayBundleUsingPOSTOKBody) UnmarshalBinary(b []byte) error {
	var res StartGatewayBundleUsingPOSTOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
