// Code generated by go-swagger; DO NOT EDIT.

package gateways

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetGatewayUsingGETReader is a Reader for the GetGatewayUsingGET structure.
type GetGatewayUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetGatewayUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetGatewayUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetGatewayUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetGatewayUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetGatewayUsingGETOK creates a GetGatewayUsingGETOK with default headers values
func NewGetGatewayUsingGETOK() *GetGatewayUsingGETOK {
	return &GetGatewayUsingGETOK{}
}

/*GetGatewayUsingGETOK handles this case with default header values.

Successfully returned gateway.
*/
type GetGatewayUsingGETOK struct {
	Payload *GetGatewayUsingGETOKBody
}

func (o *GetGatewayUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /v1/tenant/{tenantId}/gateways/{gatewayId}][%d] getGatewayUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetGatewayUsingGETOK) GetPayload() *GetGatewayUsingGETOKBody {
	return o.Payload
}

func (o *GetGatewayUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetGatewayUsingGETOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewayUsingGETBadRequest creates a GetGatewayUsingGETBadRequest with default headers values
func NewGetGatewayUsingGETBadRequest() *GetGatewayUsingGETBadRequest {
	return &GetGatewayUsingGETBadRequest{}
}

/*GetGatewayUsingGETBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type GetGatewayUsingGETBadRequest struct {
	Payload *GetGatewayUsingGETBadRequestBody
}

func (o *GetGatewayUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/tenant/{tenantId}/gateways/{gatewayId}][%d] getGatewayUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetGatewayUsingGETBadRequest) GetPayload() *GetGatewayUsingGETBadRequestBody {
	return o.Payload
}

func (o *GetGatewayUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetGatewayUsingGETBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetGatewayUsingGETNotFound creates a GetGatewayUsingGETNotFound with default headers values
func NewGetGatewayUsingGETNotFound() *GetGatewayUsingGETNotFound {
	return &GetGatewayUsingGETNotFound{}
}

/*GetGatewayUsingGETNotFound handles this case with default header values.

Gateway with specified id does not exist.
*/
type GetGatewayUsingGETNotFound struct {
	Payload *GetGatewayUsingGETNotFoundBody
}

func (o *GetGatewayUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/tenant/{tenantId}/gateways/{gatewayId}][%d] getGatewayUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetGatewayUsingGETNotFound) GetPayload() *GetGatewayUsingGETNotFoundBody {
	return o.Payload
}

func (o *GetGatewayUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetGatewayUsingGETNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetGatewayUsingGETBadRequestBody Response
swagger:model GetGatewayUsingGETBadRequestBody
*/
type GetGatewayUsingGETBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get gateway using g e t bad request body
func (o *GetGatewayUsingGETBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGatewayUsingGETBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getGatewayUsingGETBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGatewayUsingGETBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGatewayUsingGETBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetGatewayUsingGETBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGatewayUsingGETNotFoundBody Response
swagger:model GetGatewayUsingGETNotFoundBody
*/
type GetGatewayUsingGETNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get gateway using g e t not found body
func (o *GetGatewayUsingGETNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGatewayUsingGETNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getGatewayUsingGETNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGatewayUsingGETNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGatewayUsingGETNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetGatewayUsingGETNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGatewayUsingGETOKBody GatewayBean
swagger:model GetGatewayUsingGETOKBody
*/
type GetGatewayUsingGETOKBody struct {

	// The alternate ID of IoT gateway.
	// Read Only: true
	AlternateID string `json:"alternateId,omitempty"`

	// Unix time in milliseconds. The timestamp indicates when the IoT Gateway was added to the platform. This field is immutable.
	// Read Only: true
	// Format: date-time
	CreationTimestamp strfmt.DateTime `json:"creationTimestamp,omitempty"`

	// A set of user defined properties represented as key value pair.
	CustomProperties []*GetGatewayUsingGETOKBodyCustomPropertiesItems0 `json:"customProperties"`

	// A unique identifier of IoT Gateway. Is generated by the system. This field is immutable.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The name of IoT Gateway
	// Required: true
	Name *string `json:"name"`

	// Information about the operating system, where the IoT Gateway is running like name, version and architecture.
	// Read Only: true
	OperatingSystem string `json:"operatingSystem,omitempty"`

	// Id of the protocol supported by the gateway
	// Required: true
	// Read Only: true
	ProtocolID string `json:"protocolId"`

	// The status of the IoT Gateway. This field is immutable.
	// Read Only: true
	// Enum: [online offline unknown]
	Status string `json:"status,omitempty"`

	// The type of the IoT Gateway. This field is immutable.
	// Read Only: true
	// Enum: [cloud edge]
	Type string `json:"type,omitempty"`

	// The version of the IoT Gateway.
	// Read Only: true
	Version string `json:"version,omitempty"`
}

// Validate validates this get gateway using g e t o k body
func (o *GetGatewayUsingGETOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCreationTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateProtocolID(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateStatus(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGatewayUsingGETOKBody) validateCreationTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.CreationTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("getGatewayUsingGETOK"+"."+"creationTimestamp", "body", "date-time", o.CreationTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetGatewayUsingGETOKBody) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomProperties) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomProperties); i++ {
		if swag.IsZero(o.CustomProperties[i]) { // not required
			continue
		}

		if o.CustomProperties[i] != nil {
			if err := o.CustomProperties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getGatewayUsingGETOK" + "." + "customProperties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetGatewayUsingGETOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getGatewayUsingGETOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetGatewayUsingGETOKBody) validateProtocolID(formats strfmt.Registry) error {

	if err := validate.RequiredString("getGatewayUsingGETOK"+"."+"protocolId", "body", string(o.ProtocolID)); err != nil {
		return err
	}

	return nil
}

var getGatewayUsingGETOKBodyTypeStatusPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["online","offline","unknown"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getGatewayUsingGETOKBodyTypeStatusPropEnum = append(getGatewayUsingGETOKBodyTypeStatusPropEnum, v)
	}
}

const (

	// GetGatewayUsingGETOKBodyStatusOnline captures enum value "online"
	GetGatewayUsingGETOKBodyStatusOnline string = "online"

	// GetGatewayUsingGETOKBodyStatusOffline captures enum value "offline"
	GetGatewayUsingGETOKBodyStatusOffline string = "offline"

	// GetGatewayUsingGETOKBodyStatusUnknown captures enum value "unknown"
	GetGatewayUsingGETOKBodyStatusUnknown string = "unknown"
)

// prop value enum
func (o *GetGatewayUsingGETOKBody) validateStatusEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getGatewayUsingGETOKBodyTypeStatusPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetGatewayUsingGETOKBody) validateStatus(formats strfmt.Registry) error {

	if swag.IsZero(o.Status) { // not required
		return nil
	}

	// value enum
	if err := o.validateStatusEnum("getGatewayUsingGETOK"+"."+"status", "body", o.Status); err != nil {
		return err
	}

	return nil
}

var getGatewayUsingGETOKBodyTypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["cloud","edge"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getGatewayUsingGETOKBodyTypeTypePropEnum = append(getGatewayUsingGETOKBodyTypeTypePropEnum, v)
	}
}

const (

	// GetGatewayUsingGETOKBodyTypeCloud captures enum value "cloud"
	GetGatewayUsingGETOKBodyTypeCloud string = "cloud"

	// GetGatewayUsingGETOKBodyTypeEdge captures enum value "edge"
	GetGatewayUsingGETOKBodyTypeEdge string = "edge"
)

// prop value enum
func (o *GetGatewayUsingGETOKBody) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getGatewayUsingGETOKBodyTypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetGatewayUsingGETOKBody) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("getGatewayUsingGETOK"+"."+"type", "body", o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGatewayUsingGETOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGatewayUsingGETOKBody) UnmarshalBinary(b []byte) error {
	var res GetGatewayUsingGETOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetGatewayUsingGETOKBodyCustomPropertiesItems0 CustomPropertyBean
swagger:model GetGatewayUsingGETOKBodyCustomPropertiesItems0
*/
type GetGatewayUsingGETOKBodyCustomPropertiesItems0 struct {

	// A unique identifier of a custom property. Is defined by the user. This field is an immutable.
	// Required: true
	Key *string `json:"key"`

	// Value of the custom property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this get gateway using g e t o k body custom properties items0
func (o *GetGatewayUsingGETOKBodyCustomPropertiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetGatewayUsingGETOKBodyCustomPropertiesItems0) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", o.Key); err != nil {
		return err
	}

	return nil
}

func (o *GetGatewayUsingGETOKBodyCustomPropertiesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetGatewayUsingGETOKBodyCustomPropertiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetGatewayUsingGETOKBodyCustomPropertiesItems0) UnmarshalBinary(b []byte) error {
	var res GetGatewayUsingGETOKBodyCustomPropertiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
