// Code generated by go-swagger; DO NOT EDIT.

package capabilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewCreateCapabilityUsingPOSTParams creates a new CreateCapabilityUsingPOSTParams object
// with the default values initialized.
func NewCreateCapabilityUsingPOSTParams() *CreateCapabilityUsingPOSTParams {
	var ()
	return &CreateCapabilityUsingPOSTParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewCreateCapabilityUsingPOSTParamsWithTimeout creates a new CreateCapabilityUsingPOSTParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewCreateCapabilityUsingPOSTParamsWithTimeout(timeout time.Duration) *CreateCapabilityUsingPOSTParams {
	var ()
	return &CreateCapabilityUsingPOSTParams{

		timeout: timeout,
	}
}

// NewCreateCapabilityUsingPOSTParamsWithContext creates a new CreateCapabilityUsingPOSTParams object
// with the default values initialized, and the ability to set a context for a request
func NewCreateCapabilityUsingPOSTParamsWithContext(ctx context.Context) *CreateCapabilityUsingPOSTParams {
	var ()
	return &CreateCapabilityUsingPOSTParams{

		Context: ctx,
	}
}

// NewCreateCapabilityUsingPOSTParamsWithHTTPClient creates a new CreateCapabilityUsingPOSTParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewCreateCapabilityUsingPOSTParamsWithHTTPClient(client *http.Client) *CreateCapabilityUsingPOSTParams {
	var ()
	return &CreateCapabilityUsingPOSTParams{
		HTTPClient: client,
	}
}

/*CreateCapabilityUsingPOSTParams contains all the parameters to send to the API endpoint
for the create capability using p o s t operation typically these are written to a http.Request
*/
type CreateCapabilityUsingPOSTParams struct {

	/*Request
	  Specification of the capability that will be created.

	*/
	Request CreateCapabilityUsingPOSTBody
	/*TenantID
	  Unique identifier of a tenant.

	*/
	TenantID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) WithTimeout(timeout time.Duration) *CreateCapabilityUsingPOSTParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) WithContext(ctx context.Context) *CreateCapabilityUsingPOSTParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) WithHTTPClient(client *http.Client) *CreateCapabilityUsingPOSTParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithRequest adds the request to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) WithRequest(request CreateCapabilityUsingPOSTBody) *CreateCapabilityUsingPOSTParams {
	o.SetRequest(request)
	return o
}

// SetRequest adds the request to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) SetRequest(request CreateCapabilityUsingPOSTBody) {
	o.Request = request
}

// WithTenantID adds the tenantID to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) WithTenantID(tenantID string) *CreateCapabilityUsingPOSTParams {
	o.SetTenantID(tenantID)
	return o
}

// SetTenantID adds the tenantId to the create capability using p o s t params
func (o *CreateCapabilityUsingPOSTParams) SetTenantID(tenantID string) {
	o.TenantID = tenantID
}

// WriteToRequest writes these params to a swagger request
func (o *CreateCapabilityUsingPOSTParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if err := r.SetBodyParam(o.Request); err != nil {
		return err
	}

	// path param tenantId
	if err := r.SetPathParam("tenantId", o.TenantID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
