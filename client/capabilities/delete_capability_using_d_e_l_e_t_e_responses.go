// Code generated by go-swagger; DO NOT EDIT.

package capabilities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeleteCapabilityUsingDELETEReader is a Reader for the DeleteCapabilityUsingDELETE structure.
type DeleteCapabilityUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteCapabilityUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteCapabilityUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewDeleteCapabilityUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewDeleteCapabilityUsingDELETEConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteCapabilityUsingDELETEOK creates a DeleteCapabilityUsingDELETEOK with default headers values
func NewDeleteCapabilityUsingDELETEOK() *DeleteCapabilityUsingDELETEOK {
	return &DeleteCapabilityUsingDELETEOK{}
}

/*DeleteCapabilityUsingDELETEOK handles this case with default header values.

Successfully deleted capability.
*/
type DeleteCapabilityUsingDELETEOK struct {
	Payload *DeleteCapabilityUsingDELETEOKBody
}

func (o *DeleteCapabilityUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/capabilities/{capabilityId}][%d] deleteCapabilityUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeleteCapabilityUsingDELETEOK) GetPayload() *DeleteCapabilityUsingDELETEOKBody {
	return o.Payload
}

func (o *DeleteCapabilityUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteCapabilityUsingDELETEOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCapabilityUsingDELETENotFound creates a DeleteCapabilityUsingDELETENotFound with default headers values
func NewDeleteCapabilityUsingDELETENotFound() *DeleteCapabilityUsingDELETENotFound {
	return &DeleteCapabilityUsingDELETENotFound{}
}

/*DeleteCapabilityUsingDELETENotFound handles this case with default header values.

Capability with specified id does not exist.
*/
type DeleteCapabilityUsingDELETENotFound struct {
	Payload *DeleteCapabilityUsingDELETENotFoundBody
}

func (o *DeleteCapabilityUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/capabilities/{capabilityId}][%d] deleteCapabilityUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeleteCapabilityUsingDELETENotFound) GetPayload() *DeleteCapabilityUsingDELETENotFoundBody {
	return o.Payload
}

func (o *DeleteCapabilityUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteCapabilityUsingDELETENotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteCapabilityUsingDELETEConflict creates a DeleteCapabilityUsingDELETEConflict with default headers values
func NewDeleteCapabilityUsingDELETEConflict() *DeleteCapabilityUsingDELETEConflict {
	return &DeleteCapabilityUsingDELETEConflict{}
}

/*DeleteCapabilityUsingDELETEConflict handles this case with default header values.

Capability is still used by sensor types.
*/
type DeleteCapabilityUsingDELETEConflict struct {
	Payload *DeleteCapabilityUsingDELETEConflictBody
}

func (o *DeleteCapabilityUsingDELETEConflict) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/capabilities/{capabilityId}][%d] deleteCapabilityUsingDELETEConflict  %+v", 409, o.Payload)
}

func (o *DeleteCapabilityUsingDELETEConflict) GetPayload() *DeleteCapabilityUsingDELETEConflictBody {
	return o.Payload
}

func (o *DeleteCapabilityUsingDELETEConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteCapabilityUsingDELETEConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteCapabilityUsingDELETEConflictBody Response
swagger:model DeleteCapabilityUsingDELETEConflictBody
*/
type DeleteCapabilityUsingDELETEConflictBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete capability using d e l e t e conflict body
func (o *DeleteCapabilityUsingDELETEConflictBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCapabilityUsingDELETEConflictBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteCapabilityUsingDELETEConflict"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCapabilityUsingDELETEConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCapabilityUsingDELETEConflictBody) UnmarshalBinary(b []byte) error {
	var res DeleteCapabilityUsingDELETEConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCapabilityUsingDELETENotFoundBody Response
swagger:model DeleteCapabilityUsingDELETENotFoundBody
*/
type DeleteCapabilityUsingDELETENotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete capability using d e l e t e not found body
func (o *DeleteCapabilityUsingDELETENotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCapabilityUsingDELETENotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteCapabilityUsingDELETENotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCapabilityUsingDELETENotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCapabilityUsingDELETENotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteCapabilityUsingDELETENotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteCapabilityUsingDELETEOKBody Response
swagger:model DeleteCapabilityUsingDELETEOKBody
*/
type DeleteCapabilityUsingDELETEOKBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete capability using d e l e t e o k body
func (o *DeleteCapabilityUsingDELETEOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteCapabilityUsingDELETEOKBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteCapabilityUsingDELETEOK"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteCapabilityUsingDELETEOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteCapabilityUsingDELETEOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteCapabilityUsingDELETEOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
