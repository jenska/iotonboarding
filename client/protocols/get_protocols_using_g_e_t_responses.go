// Code generated by go-swagger; DO NOT EDIT.

package protocols

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// GetProtocolsUsingGETReader is a Reader for the GetProtocolsUsingGET structure.
type GetProtocolsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetProtocolsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetProtocolsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetProtocolsUsingGETOK creates a GetProtocolsUsingGETOK with default headers values
func NewGetProtocolsUsingGETOK() *GetProtocolsUsingGETOK {
	return &GetProtocolsUsingGETOK{}
}

/*GetProtocolsUsingGETOK handles this case with default header values.

OK
*/
type GetProtocolsUsingGETOK struct {
	Payload []*GetProtocolsUsingGETOKBodyItems0
}

func (o *GetProtocolsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /v1/protocols][%d] getProtocolsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetProtocolsUsingGETOK) GetPayload() []*GetProtocolsUsingGETOKBodyItems0 {
	return o.Payload
}

func (o *GetProtocolsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetProtocolsUsingGETOKBodyItems0 ProtocolBean
swagger:model GetProtocolsUsingGETOKBodyItems0
*/
type GetProtocolsUsingGETOKBodyItems0 struct {

	// id
	ID string `json:"id,omitempty"`
}

// Validate validates this get protocols using g e t o k body items0
func (o *GetProtocolsUsingGETOKBodyItems0) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *GetProtocolsUsingGETOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetProtocolsUsingGETOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetProtocolsUsingGETOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
