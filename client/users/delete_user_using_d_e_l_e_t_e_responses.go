// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeleteUserUsingDELETEReader is a Reader for the DeleteUserUsingDELETE structure.
type DeleteUserUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteUserUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteUserUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteUserUsingDELETEBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteUserUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteUserUsingDELETEOK creates a DeleteUserUsingDELETEOK with default headers values
func NewDeleteUserUsingDELETEOK() *DeleteUserUsingDELETEOK {
	return &DeleteUserUsingDELETEOK{}
}

/*DeleteUserUsingDELETEOK handles this case with default header values.

Successfully deleted user.
*/
type DeleteUserUsingDELETEOK struct {
	Payload *DeleteUserUsingDELETEOKBody
}

func (o *DeleteUserUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{userId}][%d] deleteUserUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *DeleteUserUsingDELETEOK) GetPayload() *DeleteUserUsingDELETEOKBody {
	return o.Payload
}

func (o *DeleteUserUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserUsingDELETEOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserUsingDELETEBadRequest creates a DeleteUserUsingDELETEBadRequest with default headers values
func NewDeleteUserUsingDELETEBadRequest() *DeleteUserUsingDELETEBadRequest {
	return &DeleteUserUsingDELETEBadRequest{}
}

/*DeleteUserUsingDELETEBadRequest handles this case with default header values.

HTTP request malformed.
*/
type DeleteUserUsingDELETEBadRequest struct {
	Payload *DeleteUserUsingDELETEBadRequestBody
}

func (o *DeleteUserUsingDELETEBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{userId}][%d] deleteUserUsingDELETEBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteUserUsingDELETEBadRequest) GetPayload() *DeleteUserUsingDELETEBadRequestBody {
	return o.Payload
}

func (o *DeleteUserUsingDELETEBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserUsingDELETEBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteUserUsingDELETENotFound creates a DeleteUserUsingDELETENotFound with default headers values
func NewDeleteUserUsingDELETENotFound() *DeleteUserUsingDELETENotFound {
	return &DeleteUserUsingDELETENotFound{}
}

/*DeleteUserUsingDELETENotFound handles this case with default header values.

User with specified id does not exist.
*/
type DeleteUserUsingDELETENotFound struct {
	Payload *DeleteUserUsingDELETENotFoundBody
}

func (o *DeleteUserUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{userId}][%d] deleteUserUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *DeleteUserUsingDELETENotFound) GetPayload() *DeleteUserUsingDELETENotFoundBody {
	return o.Payload
}

func (o *DeleteUserUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteUserUsingDELETENotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteUserUsingDELETEBadRequestBody Response
swagger:model DeleteUserUsingDELETEBadRequestBody
*/
type DeleteUserUsingDELETEBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete user using d e l e t e bad request body
func (o *DeleteUserUsingDELETEBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserUsingDELETEBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserUsingDELETEBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserUsingDELETEBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserUsingDELETEBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserUsingDELETEBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteUserUsingDELETENotFoundBody Response
swagger:model DeleteUserUsingDELETENotFoundBody
*/
type DeleteUserUsingDELETENotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete user using d e l e t e not found body
func (o *DeleteUserUsingDELETENotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserUsingDELETENotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserUsingDELETENotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserUsingDELETENotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserUsingDELETENotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserUsingDELETENotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteUserUsingDELETEOKBody Response
swagger:model DeleteUserUsingDELETEOKBody
*/
type DeleteUserUsingDELETEOKBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete user using d e l e t e o k body
func (o *DeleteUserUsingDELETEOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteUserUsingDELETEOKBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteUserUsingDELETEOK"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteUserUsingDELETEOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteUserUsingDELETEOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteUserUsingDELETEOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
