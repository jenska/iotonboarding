// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UnlockUserReader is a Reader for the UnlockUser structure.
type UnlockUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UnlockUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUnlockUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUnlockUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUnlockUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUnlockUserOK creates a UnlockUserOK with default headers values
func NewUnlockUserOK() *UnlockUserOK {
	return &UnlockUserOK{}
}

/*UnlockUserOK handles this case with default header values.

Successfully unlocked user.
*/
type UnlockUserOK struct {
	Payload *UnlockUserOKBody
}

func (o *UnlockUserOK) Error() string {
	return fmt.Sprintf("[PUT /v1/users/{userId}/unlock][%d] unlockUserOK  %+v", 200, o.Payload)
}

func (o *UnlockUserOK) GetPayload() *UnlockUserOKBody {
	return o.Payload
}

func (o *UnlockUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UnlockUserOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnlockUserBadRequest creates a UnlockUserBadRequest with default headers values
func NewUnlockUserBadRequest() *UnlockUserBadRequest {
	return &UnlockUserBadRequest{}
}

/*UnlockUserBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type UnlockUserBadRequest struct {
	Payload *UnlockUserBadRequestBody
}

func (o *UnlockUserBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/users/{userId}/unlock][%d] unlockUserBadRequest  %+v", 400, o.Payload)
}

func (o *UnlockUserBadRequest) GetPayload() *UnlockUserBadRequestBody {
	return o.Payload
}

func (o *UnlockUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UnlockUserBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUnlockUserNotFound creates a UnlockUserNotFound with default headers values
func NewUnlockUserNotFound() *UnlockUserNotFound {
	return &UnlockUserNotFound{}
}

/*UnlockUserNotFound handles this case with default header values.

User with specified id does not exist.
*/
type UnlockUserNotFound struct {
	Payload *UnlockUserNotFoundBody
}

func (o *UnlockUserNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/users/{userId}/unlock][%d] unlockUserNotFound  %+v", 404, o.Payload)
}

func (o *UnlockUserNotFound) GetPayload() *UnlockUserNotFoundBody {
	return o.Payload
}

func (o *UnlockUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UnlockUserNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UnlockUserBadRequestBody Response
swagger:model UnlockUserBadRequestBody
*/
type UnlockUserBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this unlock user bad request body
func (o *UnlockUserBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UnlockUserBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("unlockUserBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UnlockUserBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnlockUserBadRequestBody) UnmarshalBinary(b []byte) error {
	var res UnlockUserBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UnlockUserNotFoundBody Response
swagger:model UnlockUserNotFoundBody
*/
type UnlockUserNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this unlock user not found body
func (o *UnlockUserNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UnlockUserNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("unlockUserNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UnlockUserNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnlockUserNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UnlockUserNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UnlockUserOKBody Response
swagger:model UnlockUserOKBody
*/
type UnlockUserOKBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this unlock user o k body
func (o *UnlockUserOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UnlockUserOKBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("unlockUserOK"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UnlockUserOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UnlockUserOKBody) UnmarshalBinary(b []byte) error {
	var res UnlockUserOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
