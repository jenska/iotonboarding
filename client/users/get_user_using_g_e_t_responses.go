// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetUserUsingGETReader is a Reader for the GetUserUsingGET structure.
type GetUserUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserUsingGETOK creates a GetUserUsingGETOK with default headers values
func NewGetUserUsingGETOK() *GetUserUsingGETOK {
	return &GetUserUsingGETOK{}
}

/*GetUserUsingGETOK handles this case with default header values.

Successfully returned user.
*/
type GetUserUsingGETOK struct {
	Payload *GetUserUsingGETOKBody
}

func (o *GetUserUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /v1/users/{userId}][%d] getUserUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUserUsingGETOK) GetPayload() *GetUserUsingGETOKBody {
	return o.Payload
}

func (o *GetUserUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserUsingGETOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserUsingGETBadRequest creates a GetUserUsingGETBadRequest with default headers values
func NewGetUserUsingGETBadRequest() *GetUserUsingGETBadRequest {
	return &GetUserUsingGETBadRequest{}
}

/*GetUserUsingGETBadRequest handles this case with default header values.

HTTP request malformed.
*/
type GetUserUsingGETBadRequest struct {
	Payload *GetUserUsingGETBadRequestBody
}

func (o *GetUserUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/users/{userId}][%d] getUserUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserUsingGETBadRequest) GetPayload() *GetUserUsingGETBadRequestBody {
	return o.Payload
}

func (o *GetUserUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserUsingGETBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserUsingGETNotFound creates a GetUserUsingGETNotFound with default headers values
func NewGetUserUsingGETNotFound() *GetUserUsingGETNotFound {
	return &GetUserUsingGETNotFound{}
}

/*GetUserUsingGETNotFound handles this case with default header values.

User with specified id does not exist.
*/
type GetUserUsingGETNotFound struct {
	Payload *GetUserUsingGETNotFoundBody
}

func (o *GetUserUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/users/{userId}][%d] getUserUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetUserUsingGETNotFound) GetPayload() *GetUserUsingGETNotFoundBody {
	return o.Payload
}

func (o *GetUserUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserUsingGETNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetUserUsingGETBadRequestBody Response
swagger:model GetUserUsingGETBadRequestBody
*/
type GetUserUsingGETBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get user using g e t bad request body
func (o *GetUserUsingGETBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserUsingGETBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getUserUsingGETBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserUsingGETBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserUsingGETBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetUserUsingGETBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUserUsingGETNotFoundBody Response
swagger:model GetUserUsingGETNotFoundBody
*/
type GetUserUsingGETNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get user using g e t not found body
func (o *GetUserUsingGETNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserUsingGETNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getUserUsingGETNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserUsingGETNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserUsingGETNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetUserUsingGETNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUserUsingGETOKBody UserBean
swagger:model GetUserUsingGETOKBody
*/
type GetUserUsingGETOKBody struct {

	// This value identifies if a user has been locked or not.
	// Read Only: true
	AccountNonLocked *bool `json:"accountNonLocked,omitempty"`

	// Authentications of the user.
	// Required: true
	Authentications []*GetUserUsingGETOKBodyAuthenticationsItems0 `json:"authentications"`

	// Unix time in milliseconds. The timestamp indicates when the user was added to the the platform. This field is an immutable.
	// Read Only: true
	// Format: date-time
	CreationTimestamp strfmt.DateTime `json:"creationTimestamp,omitempty"`

	// A set of user defined properties represented as key value pair.
	CustomProperties []*GetUserUsingGETOKBodyCustomPropertiesItems0 `json:"customProperties"`

	// A unique identifier of a user. Is generated by the system and unique across platform tenant. This field is an immutable.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// This value identifies when the user was last updated.
	// Read Only: true
	// Format: date-time
	LastUpdatedTimestamp strfmt.DateTime `json:"lastUpdatedTimestamp,omitempty"`

	// This value identifies the locked timestamp if the account is locked.
	// Read Only: true
	// Format: date-time
	LockedTimestamp strfmt.DateTime `json:"lockedTimestamp,omitempty"`

	// This value identifies the number of login attempts before being locked.
	// Read Only: true
	LoginAttempts int32 `json:"loginAttempts,omitempty"`

	// The name of the user. This field is not case sensitive and is unique across platform tenant.
	// Required: true
	Name *string `json:"name"`

	// A set of global user roles
	Roles []*GetUserUsingGETOKBodyRolesItems0 `json:"roles"`
}

// Validate validates this get user using g e t o k body
func (o *GetUserUsingGETOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAuthentications(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreationTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastUpdatedTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLockedTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRoles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserUsingGETOKBody) validateAuthentications(formats strfmt.Registry) error {

	if err := validate.Required("getUserUsingGETOK"+"."+"authentications", "body", o.Authentications); err != nil {
		return err
	}

	for i := 0; i < len(o.Authentications); i++ {
		if swag.IsZero(o.Authentications[i]) { // not required
			continue
		}

		if o.Authentications[i] != nil {
			if err := o.Authentications[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getUserUsingGETOK" + "." + "authentications" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetUserUsingGETOKBody) validateCreationTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.CreationTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("getUserUsingGETOK"+"."+"creationTimestamp", "body", "date-time", o.CreationTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetUserUsingGETOKBody) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomProperties) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomProperties); i++ {
		if swag.IsZero(o.CustomProperties[i]) { // not required
			continue
		}

		if o.CustomProperties[i] != nil {
			if err := o.CustomProperties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getUserUsingGETOK" + "." + "customProperties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetUserUsingGETOKBody) validateLastUpdatedTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.LastUpdatedTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("getUserUsingGETOK"+"."+"lastUpdatedTimestamp", "body", "date-time", o.LastUpdatedTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetUserUsingGETOKBody) validateLockedTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.LockedTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("getUserUsingGETOK"+"."+"lockedTimestamp", "body", "date-time", o.LockedTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *GetUserUsingGETOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getUserUsingGETOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *GetUserUsingGETOKBody) validateRoles(formats strfmt.Registry) error {

	if swag.IsZero(o.Roles) { // not required
		return nil
	}

	for i := 0; i < len(o.Roles); i++ {
		if swag.IsZero(o.Roles[i]) { // not required
			continue
		}

		if o.Roles[i] != nil {
			if err := o.Roles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getUserUsingGETOK" + "." + "roles" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserUsingGETOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserUsingGETOKBody) UnmarshalBinary(b []byte) error {
	var res GetUserUsingGETOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUserUsingGETOKBodyAuthenticationsItems0 AuthenticationBean
swagger:model GetUserUsingGETOKBodyAuthenticationsItems0
*/
type GetUserUsingGETOKBodyAuthenticationsItems0 struct {

	// The password for the user.
	Password string `json:"password,omitempty"`

	// The authentication type. Not required when updating user password.
	// Enum: [basic clientCertificate jwt]
	Type string `json:"type,omitempty"`
}

// Validate validates this get user using g e t o k body authentications items0
func (o *GetUserUsingGETOKBodyAuthenticationsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getUserUsingGETOKBodyAuthenticationsItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["basic","clientCertificate","jwt"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getUserUsingGETOKBodyAuthenticationsItems0TypeTypePropEnum = append(getUserUsingGETOKBodyAuthenticationsItems0TypeTypePropEnum, v)
	}
}

const (

	// GetUserUsingGETOKBodyAuthenticationsItems0TypeBasic captures enum value "basic"
	GetUserUsingGETOKBodyAuthenticationsItems0TypeBasic string = "basic"

	// GetUserUsingGETOKBodyAuthenticationsItems0TypeClientCertificate captures enum value "clientCertificate"
	GetUserUsingGETOKBodyAuthenticationsItems0TypeClientCertificate string = "clientCertificate"

	// GetUserUsingGETOKBodyAuthenticationsItems0TypeJwt captures enum value "jwt"
	GetUserUsingGETOKBodyAuthenticationsItems0TypeJwt string = "jwt"
)

// prop value enum
func (o *GetUserUsingGETOKBodyAuthenticationsItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getUserUsingGETOKBodyAuthenticationsItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetUserUsingGETOKBodyAuthenticationsItems0) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserUsingGETOKBodyAuthenticationsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserUsingGETOKBodyAuthenticationsItems0) UnmarshalBinary(b []byte) error {
	var res GetUserUsingGETOKBodyAuthenticationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUserUsingGETOKBodyCustomPropertiesItems0 CustomPropertyBean
swagger:model GetUserUsingGETOKBodyCustomPropertiesItems0
*/
type GetUserUsingGETOKBodyCustomPropertiesItems0 struct {

	// A unique identifier of a custom property. Is defined by the user. This field is an immutable.
	// Required: true
	Key *string `json:"key"`

	// Value of the custom property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this get user using g e t o k body custom properties items0
func (o *GetUserUsingGETOKBodyCustomPropertiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserUsingGETOKBodyCustomPropertiesItems0) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", o.Key); err != nil {
		return err
	}

	return nil
}

func (o *GetUserUsingGETOKBodyCustomPropertiesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserUsingGETOKBodyCustomPropertiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserUsingGETOKBodyCustomPropertiesItems0) UnmarshalBinary(b []byte) error {
	var res GetUserUsingGETOKBodyCustomPropertiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUserUsingGETOKBodyRolesItems0 UserRoleBean
swagger:model GetUserUsingGETOKBodyRolesItems0
*/
type GetUserUsingGETOKBodyRolesItems0 struct {

	// The role of the user.
	// Required: true
	// Enum: [instanceOwner]
	Role *string `json:"role"`
}

// Validate validates this get user using g e t o k body roles items0
func (o *GetUserUsingGETOKBodyRolesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getUserUsingGETOKBodyRolesItems0TypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["instanceOwner"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getUserUsingGETOKBodyRolesItems0TypeRolePropEnum = append(getUserUsingGETOKBodyRolesItems0TypeRolePropEnum, v)
	}
}

const (

	// GetUserUsingGETOKBodyRolesItems0RoleInstanceOwner captures enum value "instanceOwner"
	GetUserUsingGETOKBodyRolesItems0RoleInstanceOwner string = "instanceOwner"
)

// prop value enum
func (o *GetUserUsingGETOKBodyRolesItems0) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getUserUsingGETOKBodyRolesItems0TypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetUserUsingGETOKBodyRolesItems0) validateRole(formats strfmt.Registry) error {

	if err := validate.Required("role", "body", o.Role); err != nil {
		return err
	}

	// value enum
	if err := o.validateRoleEnum("role", "body", *o.Role); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserUsingGETOKBodyRolesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserUsingGETOKBodyRolesItems0) UnmarshalBinary(b []byte) error {
	var res GetUserUsingGETOKBodyRolesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
