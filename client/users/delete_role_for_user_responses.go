// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DeleteRoleForUserReader is a Reader for the DeleteRoleForUser structure.
type DeleteRoleForUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteRoleForUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDeleteRoleForUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDeleteRoleForUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDeleteRoleForUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDeleteRoleForUserOK creates a DeleteRoleForUserOK with default headers values
func NewDeleteRoleForUserOK() *DeleteRoleForUserOK {
	return &DeleteRoleForUserOK{}
}

/*DeleteRoleForUserOK handles this case with default header values.

Successfully removed role.
*/
type DeleteRoleForUserOK struct {
	Payload *DeleteRoleForUserOKBody
}

func (o *DeleteRoleForUserOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{userId}/roles/{role}][%d] deleteRoleForUserOK  %+v", 200, o.Payload)
}

func (o *DeleteRoleForUserOK) GetPayload() *DeleteRoleForUserOKBody {
	return o.Payload
}

func (o *DeleteRoleForUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteRoleForUserOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoleForUserBadRequest creates a DeleteRoleForUserBadRequest with default headers values
func NewDeleteRoleForUserBadRequest() *DeleteRoleForUserBadRequest {
	return &DeleteRoleForUserBadRequest{}
}

/*DeleteRoleForUserBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type DeleteRoleForUserBadRequest struct {
	Payload *DeleteRoleForUserBadRequestBody
}

func (o *DeleteRoleForUserBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{userId}/roles/{role}][%d] deleteRoleForUserBadRequest  %+v", 400, o.Payload)
}

func (o *DeleteRoleForUserBadRequest) GetPayload() *DeleteRoleForUserBadRequestBody {
	return o.Payload
}

func (o *DeleteRoleForUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteRoleForUserBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteRoleForUserNotFound creates a DeleteRoleForUserNotFound with default headers values
func NewDeleteRoleForUserNotFound() *DeleteRoleForUserNotFound {
	return &DeleteRoleForUserNotFound{}
}

/*DeleteRoleForUserNotFound handles this case with default header values.

User or role with specified id or key does not exist.
*/
type DeleteRoleForUserNotFound struct {
	Payload *DeleteRoleForUserNotFoundBody
}

func (o *DeleteRoleForUserNotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/users/{userId}/roles/{role}][%d] deleteRoleForUserNotFound  %+v", 404, o.Payload)
}

func (o *DeleteRoleForUserNotFound) GetPayload() *DeleteRoleForUserNotFoundBody {
	return o.Payload
}

func (o *DeleteRoleForUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DeleteRoleForUserNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DeleteRoleForUserBadRequestBody Response
swagger:model DeleteRoleForUserBadRequestBody
*/
type DeleteRoleForUserBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete role for user bad request body
func (o *DeleteRoleForUserBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteRoleForUserBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteRoleForUserBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteRoleForUserBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteRoleForUserBadRequestBody) UnmarshalBinary(b []byte) error {
	var res DeleteRoleForUserBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteRoleForUserNotFoundBody Response
swagger:model DeleteRoleForUserNotFoundBody
*/
type DeleteRoleForUserNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete role for user not found body
func (o *DeleteRoleForUserNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteRoleForUserNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteRoleForUserNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteRoleForUserNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteRoleForUserNotFoundBody) UnmarshalBinary(b []byte) error {
	var res DeleteRoleForUserNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DeleteRoleForUserOKBody Response
swagger:model DeleteRoleForUserOKBody
*/
type DeleteRoleForUserOKBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this delete role for user o k body
func (o *DeleteRoleForUserOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DeleteRoleForUserOKBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("deleteRoleForUserOK"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DeleteRoleForUserOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DeleteRoleForUserOKBody) UnmarshalBinary(b []byte) error {
	var res DeleteRoleForUserOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
