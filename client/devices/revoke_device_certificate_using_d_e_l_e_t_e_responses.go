// Code generated by go-swagger; DO NOT EDIT.

package devices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// RevokeDeviceCertificateUsingDELETEReader is a Reader for the RevokeDeviceCertificateUsingDELETE structure.
type RevokeDeviceCertificateUsingDELETEReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RevokeDeviceCertificateUsingDELETEReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRevokeDeviceCertificateUsingDELETEOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRevokeDeviceCertificateUsingDELETEBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRevokeDeviceCertificateUsingDELETENotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRevokeDeviceCertificateUsingDELETEOK creates a RevokeDeviceCertificateUsingDELETEOK with default headers values
func NewRevokeDeviceCertificateUsingDELETEOK() *RevokeDeviceCertificateUsingDELETEOK {
	return &RevokeDeviceCertificateUsingDELETEOK{}
}

/*RevokeDeviceCertificateUsingDELETEOK handles this case with default header values.

Successfully revoked device certificate.
*/
type RevokeDeviceCertificateUsingDELETEOK struct {
	Payload *RevokeDeviceCertificateUsingDELETEOKBody
}

func (o *RevokeDeviceCertificateUsingDELETEOK) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/devices/{deviceId}/authentications/clientCertificate/{fingerprint}][%d] revokeDeviceCertificateUsingDELETEOK  %+v", 200, o.Payload)
}

func (o *RevokeDeviceCertificateUsingDELETEOK) GetPayload() *RevokeDeviceCertificateUsingDELETEOKBody {
	return o.Payload
}

func (o *RevokeDeviceCertificateUsingDELETEOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RevokeDeviceCertificateUsingDELETEOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeDeviceCertificateUsingDELETEBadRequest creates a RevokeDeviceCertificateUsingDELETEBadRequest with default headers values
func NewRevokeDeviceCertificateUsingDELETEBadRequest() *RevokeDeviceCertificateUsingDELETEBadRequest {
	return &RevokeDeviceCertificateUsingDELETEBadRequest{}
}

/*RevokeDeviceCertificateUsingDELETEBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type RevokeDeviceCertificateUsingDELETEBadRequest struct {
	Payload *RevokeDeviceCertificateUsingDELETEBadRequestBody
}

func (o *RevokeDeviceCertificateUsingDELETEBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/devices/{deviceId}/authentications/clientCertificate/{fingerprint}][%d] revokeDeviceCertificateUsingDELETEBadRequest  %+v", 400, o.Payload)
}

func (o *RevokeDeviceCertificateUsingDELETEBadRequest) GetPayload() *RevokeDeviceCertificateUsingDELETEBadRequestBody {
	return o.Payload
}

func (o *RevokeDeviceCertificateUsingDELETEBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RevokeDeviceCertificateUsingDELETEBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRevokeDeviceCertificateUsingDELETENotFound creates a RevokeDeviceCertificateUsingDELETENotFound with default headers values
func NewRevokeDeviceCertificateUsingDELETENotFound() *RevokeDeviceCertificateUsingDELETENotFound {
	return &RevokeDeviceCertificateUsingDELETENotFound{}
}

/*RevokeDeviceCertificateUsingDELETENotFound handles this case with default header values.

Certificate does not exist.
*/
type RevokeDeviceCertificateUsingDELETENotFound struct {
	Payload *RevokeDeviceCertificateUsingDELETENotFoundBody
}

func (o *RevokeDeviceCertificateUsingDELETENotFound) Error() string {
	return fmt.Sprintf("[DELETE /v1/tenant/{tenantId}/devices/{deviceId}/authentications/clientCertificate/{fingerprint}][%d] revokeDeviceCertificateUsingDELETENotFound  %+v", 404, o.Payload)
}

func (o *RevokeDeviceCertificateUsingDELETENotFound) GetPayload() *RevokeDeviceCertificateUsingDELETENotFoundBody {
	return o.Payload
}

func (o *RevokeDeviceCertificateUsingDELETENotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(RevokeDeviceCertificateUsingDELETENotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*RevokeDeviceCertificateUsingDELETEBadRequestBody Response
swagger:model RevokeDeviceCertificateUsingDELETEBadRequestBody
*/
type RevokeDeviceCertificateUsingDELETEBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this revoke device certificate using d e l e t e bad request body
func (o *RevokeDeviceCertificateUsingDELETEBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RevokeDeviceCertificateUsingDELETEBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("revokeDeviceCertificateUsingDELETEBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RevokeDeviceCertificateUsingDELETEBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RevokeDeviceCertificateUsingDELETEBadRequestBody) UnmarshalBinary(b []byte) error {
	var res RevokeDeviceCertificateUsingDELETEBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RevokeDeviceCertificateUsingDELETENotFoundBody Response
swagger:model RevokeDeviceCertificateUsingDELETENotFoundBody
*/
type RevokeDeviceCertificateUsingDELETENotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this revoke device certificate using d e l e t e not found body
func (o *RevokeDeviceCertificateUsingDELETENotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RevokeDeviceCertificateUsingDELETENotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("revokeDeviceCertificateUsingDELETENotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RevokeDeviceCertificateUsingDELETENotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RevokeDeviceCertificateUsingDELETENotFoundBody) UnmarshalBinary(b []byte) error {
	var res RevokeDeviceCertificateUsingDELETENotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*RevokeDeviceCertificateUsingDELETEOKBody Response
swagger:model RevokeDeviceCertificateUsingDELETEOKBody
*/
type RevokeDeviceCertificateUsingDELETEOKBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this revoke device certificate using d e l e t e o k body
func (o *RevokeDeviceCertificateUsingDELETEOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *RevokeDeviceCertificateUsingDELETEOKBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("revokeDeviceCertificateUsingDELETEOK"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *RevokeDeviceCertificateUsingDELETEOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *RevokeDeviceCertificateUsingDELETEOKBody) UnmarshalBinary(b []byte) error {
	var res RevokeDeviceCertificateUsingDELETEOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
