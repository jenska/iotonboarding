// Code generated by go-swagger; DO NOT EDIT.

package session

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// DestroySessionUsingPOSTReader is a Reader for the DestroySessionUsingPOST structure.
type DestroySessionUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DestroySessionUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDestroySessionUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDestroySessionUsingPOSTOK creates a DestroySessionUsingPOSTOK with default headers values
func NewDestroySessionUsingPOSTOK() *DestroySessionUsingPOSTOK {
	return &DestroySessionUsingPOSTOK{}
}

/*DestroySessionUsingPOSTOK handles this case with default header values.

OK
*/
type DestroySessionUsingPOSTOK struct {
	Payload *DestroySessionUsingPOSTOKBody
}

func (o *DestroySessionUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /v1/logout][%d] destroySessionUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *DestroySessionUsingPOSTOK) GetPayload() *DestroySessionUsingPOSTOKBody {
	return o.Payload
}

func (o *DestroySessionUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(DestroySessionUsingPOSTOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*DestroySessionUsingPOSTOKBody UserBean
swagger:model DestroySessionUsingPOSTOKBody
*/
type DestroySessionUsingPOSTOKBody struct {

	// This value identifies if a user has been locked or not.
	// Read Only: true
	AccountNonLocked *bool `json:"accountNonLocked,omitempty"`

	// Authentications of the user.
	// Required: true
	Authentications []*DestroySessionUsingPOSTOKBodyAuthenticationsItems0 `json:"authentications"`

	// Unix time in milliseconds. The timestamp indicates when the user was added to the the platform. This field is an immutable.
	// Read Only: true
	// Format: date-time
	CreationTimestamp strfmt.DateTime `json:"creationTimestamp,omitempty"`

	// A set of user defined properties represented as key value pair.
	CustomProperties []*DestroySessionUsingPOSTOKBodyCustomPropertiesItems0 `json:"customProperties"`

	// A unique identifier of a user. Is generated by the system and unique across platform tenant. This field is an immutable.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// This value identifies when the user was last updated.
	// Read Only: true
	// Format: date-time
	LastUpdatedTimestamp strfmt.DateTime `json:"lastUpdatedTimestamp,omitempty"`

	// This value identifies the locked timestamp if the account is locked.
	// Read Only: true
	// Format: date-time
	LockedTimestamp strfmt.DateTime `json:"lockedTimestamp,omitempty"`

	// This value identifies the number of login attempts before being locked.
	// Read Only: true
	LoginAttempts int32 `json:"loginAttempts,omitempty"`

	// The name of the user. This field is not case sensitive and is unique across platform tenant.
	// Required: true
	Name *string `json:"name"`

	// A set of global user roles
	Roles []*DestroySessionUsingPOSTOKBodyRolesItems0 `json:"roles"`
}

// Validate validates this destroy session using p o s t o k body
func (o *DestroySessionUsingPOSTOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateAuthentications(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCreationTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLastUpdatedTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateLockedTimestamp(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateRoles(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DestroySessionUsingPOSTOKBody) validateAuthentications(formats strfmt.Registry) error {

	if err := validate.Required("destroySessionUsingPOSTOK"+"."+"authentications", "body", o.Authentications); err != nil {
		return err
	}

	for i := 0; i < len(o.Authentications); i++ {
		if swag.IsZero(o.Authentications[i]) { // not required
			continue
		}

		if o.Authentications[i] != nil {
			if err := o.Authentications[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("destroySessionUsingPOSTOK" + "." + "authentications" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *DestroySessionUsingPOSTOKBody) validateCreationTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.CreationTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("destroySessionUsingPOSTOK"+"."+"creationTimestamp", "body", "date-time", o.CreationTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *DestroySessionUsingPOSTOKBody) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomProperties) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomProperties); i++ {
		if swag.IsZero(o.CustomProperties[i]) { // not required
			continue
		}

		if o.CustomProperties[i] != nil {
			if err := o.CustomProperties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("destroySessionUsingPOSTOK" + "." + "customProperties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *DestroySessionUsingPOSTOKBody) validateLastUpdatedTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.LastUpdatedTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("destroySessionUsingPOSTOK"+"."+"lastUpdatedTimestamp", "body", "date-time", o.LastUpdatedTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *DestroySessionUsingPOSTOKBody) validateLockedTimestamp(formats strfmt.Registry) error {

	if swag.IsZero(o.LockedTimestamp) { // not required
		return nil
	}

	if err := validate.FormatOf("destroySessionUsingPOSTOK"+"."+"lockedTimestamp", "body", "date-time", o.LockedTimestamp.String(), formats); err != nil {
		return err
	}

	return nil
}

func (o *DestroySessionUsingPOSTOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("destroySessionUsingPOSTOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

func (o *DestroySessionUsingPOSTOKBody) validateRoles(formats strfmt.Registry) error {

	if swag.IsZero(o.Roles) { // not required
		return nil
	}

	for i := 0; i < len(o.Roles); i++ {
		if swag.IsZero(o.Roles[i]) { // not required
			continue
		}

		if o.Roles[i] != nil {
			if err := o.Roles[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("destroySessionUsingPOSTOK" + "." + "roles" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (o *DestroySessionUsingPOSTOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DestroySessionUsingPOSTOKBody) UnmarshalBinary(b []byte) error {
	var res DestroySessionUsingPOSTOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DestroySessionUsingPOSTOKBodyAuthenticationsItems0 AuthenticationBean
swagger:model DestroySessionUsingPOSTOKBodyAuthenticationsItems0
*/
type DestroySessionUsingPOSTOKBodyAuthenticationsItems0 struct {

	// The password for the user.
	Password string `json:"password,omitempty"`

	// The authentication type. Not required when updating user password.
	// Enum: [basic clientCertificate jwt]
	Type string `json:"type,omitempty"`
}

// Validate validates this destroy session using p o s t o k body authentications items0
func (o *DestroySessionUsingPOSTOKBodyAuthenticationsItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var destroySessionUsingPOSTOKBodyAuthenticationsItems0TypeTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["basic","clientCertificate","jwt"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		destroySessionUsingPOSTOKBodyAuthenticationsItems0TypeTypePropEnum = append(destroySessionUsingPOSTOKBodyAuthenticationsItems0TypeTypePropEnum, v)
	}
}

const (

	// DestroySessionUsingPOSTOKBodyAuthenticationsItems0TypeBasic captures enum value "basic"
	DestroySessionUsingPOSTOKBodyAuthenticationsItems0TypeBasic string = "basic"

	// DestroySessionUsingPOSTOKBodyAuthenticationsItems0TypeClientCertificate captures enum value "clientCertificate"
	DestroySessionUsingPOSTOKBodyAuthenticationsItems0TypeClientCertificate string = "clientCertificate"

	// DestroySessionUsingPOSTOKBodyAuthenticationsItems0TypeJwt captures enum value "jwt"
	DestroySessionUsingPOSTOKBodyAuthenticationsItems0TypeJwt string = "jwt"
)

// prop value enum
func (o *DestroySessionUsingPOSTOKBodyAuthenticationsItems0) validateTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, destroySessionUsingPOSTOKBodyAuthenticationsItems0TypeTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *DestroySessionUsingPOSTOKBodyAuthenticationsItems0) validateType(formats strfmt.Registry) error {

	if swag.IsZero(o.Type) { // not required
		return nil
	}

	// value enum
	if err := o.validateTypeEnum("type", "body", o.Type); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DestroySessionUsingPOSTOKBodyAuthenticationsItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DestroySessionUsingPOSTOKBodyAuthenticationsItems0) UnmarshalBinary(b []byte) error {
	var res DestroySessionUsingPOSTOKBodyAuthenticationsItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DestroySessionUsingPOSTOKBodyCustomPropertiesItems0 CustomPropertyBean
swagger:model DestroySessionUsingPOSTOKBodyCustomPropertiesItems0
*/
type DestroySessionUsingPOSTOKBodyCustomPropertiesItems0 struct {

	// A unique identifier of a custom property. Is defined by the user. This field is an immutable.
	// Required: true
	Key *string `json:"key"`

	// Value of the custom property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this destroy session using p o s t o k body custom properties items0
func (o *DestroySessionUsingPOSTOKBodyCustomPropertiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *DestroySessionUsingPOSTOKBodyCustomPropertiesItems0) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", o.Key); err != nil {
		return err
	}

	return nil
}

func (o *DestroySessionUsingPOSTOKBodyCustomPropertiesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DestroySessionUsingPOSTOKBodyCustomPropertiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DestroySessionUsingPOSTOKBodyCustomPropertiesItems0) UnmarshalBinary(b []byte) error {
	var res DestroySessionUsingPOSTOKBodyCustomPropertiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*DestroySessionUsingPOSTOKBodyRolesItems0 UserRoleBean
swagger:model DestroySessionUsingPOSTOKBodyRolesItems0
*/
type DestroySessionUsingPOSTOKBodyRolesItems0 struct {

	// The role of the user.
	// Required: true
	// Enum: [instanceOwner]
	Role *string `json:"role"`
}

// Validate validates this destroy session using p o s t o k body roles items0
func (o *DestroySessionUsingPOSTOKBodyRolesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var destroySessionUsingPOSTOKBodyRolesItems0TypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["instanceOwner"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		destroySessionUsingPOSTOKBodyRolesItems0TypeRolePropEnum = append(destroySessionUsingPOSTOKBodyRolesItems0TypeRolePropEnum, v)
	}
}

const (

	// DestroySessionUsingPOSTOKBodyRolesItems0RoleInstanceOwner captures enum value "instanceOwner"
	DestroySessionUsingPOSTOKBodyRolesItems0RoleInstanceOwner string = "instanceOwner"
)

// prop value enum
func (o *DestroySessionUsingPOSTOKBodyRolesItems0) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, destroySessionUsingPOSTOKBodyRolesItems0TypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *DestroySessionUsingPOSTOKBodyRolesItems0) validateRole(formats strfmt.Registry) error {

	if err := validate.Required("role", "body", o.Role); err != nil {
		return err
	}

	// value enum
	if err := o.validateRoleEnum("role", "body", *o.Role); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *DestroySessionUsingPOSTOKBodyRolesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *DestroySessionUsingPOSTOKBodyRolesItems0) UnmarshalBinary(b []byte) error {
	var res DestroySessionUsingPOSTOKBodyRolesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
