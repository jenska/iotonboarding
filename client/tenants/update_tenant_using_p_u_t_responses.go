// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateTenantUsingPUTReader is a Reader for the UpdateTenantUsingPUT structure.
type UpdateTenantUsingPUTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateTenantUsingPUTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateTenantUsingPUTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateTenantUsingPUTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateTenantUsingPUTNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateTenantUsingPUTOK creates a UpdateTenantUsingPUTOK with default headers values
func NewUpdateTenantUsingPUTOK() *UpdateTenantUsingPUTOK {
	return &UpdateTenantUsingPUTOK{}
}

/*UpdateTenantUsingPUTOK handles this case with default header values.

Successfully updated tenant.
*/
type UpdateTenantUsingPUTOK struct {
	Payload *UpdateTenantUsingPUTOKBody
}

func (o *UpdateTenantUsingPUTOK) Error() string {
	return fmt.Sprintf("[PUT /v1/tenants/{tenantId}][%d] updateTenantUsingPUTOK  %+v", 200, o.Payload)
}

func (o *UpdateTenantUsingPUTOK) GetPayload() *UpdateTenantUsingPUTOKBody {
	return o.Payload
}

func (o *UpdateTenantUsingPUTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateTenantUsingPUTOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTenantUsingPUTBadRequest creates a UpdateTenantUsingPUTBadRequest with default headers values
func NewUpdateTenantUsingPUTBadRequest() *UpdateTenantUsingPUTBadRequest {
	return &UpdateTenantUsingPUTBadRequest{}
}

/*UpdateTenantUsingPUTBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type UpdateTenantUsingPUTBadRequest struct {
	Payload *UpdateTenantUsingPUTBadRequestBody
}

func (o *UpdateTenantUsingPUTBadRequest) Error() string {
	return fmt.Sprintf("[PUT /v1/tenants/{tenantId}][%d] updateTenantUsingPUTBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateTenantUsingPUTBadRequest) GetPayload() *UpdateTenantUsingPUTBadRequestBody {
	return o.Payload
}

func (o *UpdateTenantUsingPUTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateTenantUsingPUTBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateTenantUsingPUTNotFound creates a UpdateTenantUsingPUTNotFound with default headers values
func NewUpdateTenantUsingPUTNotFound() *UpdateTenantUsingPUTNotFound {
	return &UpdateTenantUsingPUTNotFound{}
}

/*UpdateTenantUsingPUTNotFound handles this case with default header values.

Tenant with specified id does not exist.
*/
type UpdateTenantUsingPUTNotFound struct {
	Payload *UpdateTenantUsingPUTNotFoundBody
}

func (o *UpdateTenantUsingPUTNotFound) Error() string {
	return fmt.Sprintf("[PUT /v1/tenants/{tenantId}][%d] updateTenantUsingPUTNotFound  %+v", 404, o.Payload)
}

func (o *UpdateTenantUsingPUTNotFound) GetPayload() *UpdateTenantUsingPUTNotFoundBody {
	return o.Payload
}

func (o *UpdateTenantUsingPUTNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(UpdateTenantUsingPUTNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateTenantUsingPUTBadRequestBody Response
swagger:model UpdateTenantUsingPUTBadRequestBody
*/
type UpdateTenantUsingPUTBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this update tenant using p u t bad request body
func (o *UpdateTenantUsingPUTBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateTenantUsingPUTBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("updateTenantUsingPUTBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateTenantUsingPUTBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateTenantUsingPUTBadRequestBody) UnmarshalBinary(b []byte) error {
	var res UpdateTenantUsingPUTBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateTenantUsingPUTBody TenantBean
swagger:model UpdateTenantUsingPUTBody
*/
type UpdateTenantUsingPUTBody struct {

	// A set of user defined properties represented as key value pair.
	CustomProperties []*UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0 `json:"customProperties"`

	// The unique identifier of the tenant generated by the system and unique across platform tenant. This field is immutable.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The name of the tenant.
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this update tenant using p u t body
func (o *UpdateTenantUsingPUTBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateTenantUsingPUTBody) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomProperties) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomProperties); i++ {
		if swag.IsZero(o.CustomProperties[i]) { // not required
			continue
		}

		if o.CustomProperties[i] != nil {
			if err := o.CustomProperties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("request" + "." + "customProperties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *UpdateTenantUsingPUTBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("request"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateTenantUsingPUTBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateTenantUsingPUTBody) UnmarshalBinary(b []byte) error {
	var res UpdateTenantUsingPUTBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateTenantUsingPUTNotFoundBody Response
swagger:model UpdateTenantUsingPUTNotFoundBody
*/
type UpdateTenantUsingPUTNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this update tenant using p u t not found body
func (o *UpdateTenantUsingPUTNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateTenantUsingPUTNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("updateTenantUsingPUTNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateTenantUsingPUTNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateTenantUsingPUTNotFoundBody) UnmarshalBinary(b []byte) error {
	var res UpdateTenantUsingPUTNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateTenantUsingPUTOKBody TenantBean
swagger:model UpdateTenantUsingPUTOKBody
*/
type UpdateTenantUsingPUTOKBody struct {

	// A set of user defined properties represented as key value pair.
	CustomProperties []*UpdateTenantUsingPUTOKBodyCustomPropertiesItems0 `json:"customProperties"`

	// The unique identifier of the tenant generated by the system and unique across platform tenant. This field is immutable.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The name of the tenant.
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this update tenant using p u t o k body
func (o *UpdateTenantUsingPUTOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateTenantUsingPUTOKBody) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomProperties) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomProperties); i++ {
		if swag.IsZero(o.CustomProperties[i]) { // not required
			continue
		}

		if o.CustomProperties[i] != nil {
			if err := o.CustomProperties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("updateTenantUsingPUTOK" + "." + "customProperties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *UpdateTenantUsingPUTOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("updateTenantUsingPUTOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateTenantUsingPUTOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateTenantUsingPUTOKBody) UnmarshalBinary(b []byte) error {
	var res UpdateTenantUsingPUTOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateTenantUsingPUTOKBodyCustomPropertiesItems0 CustomPropertyBean
swagger:model UpdateTenantUsingPUTOKBodyCustomPropertiesItems0
*/
type UpdateTenantUsingPUTOKBodyCustomPropertiesItems0 struct {

	// A unique identifier of a custom property. Is defined by the user. This field is an immutable.
	// Required: true
	Key *string `json:"key"`

	// Value of the custom property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this update tenant using p u t o k body custom properties items0
func (o *UpdateTenantUsingPUTOKBodyCustomPropertiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateTenantUsingPUTOKBodyCustomPropertiesItems0) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", o.Key); err != nil {
		return err
	}

	return nil
}

func (o *UpdateTenantUsingPUTOKBodyCustomPropertiesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateTenantUsingPUTOKBodyCustomPropertiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateTenantUsingPUTOKBodyCustomPropertiesItems0) UnmarshalBinary(b []byte) error {
	var res UpdateTenantUsingPUTOKBodyCustomPropertiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0 CustomPropertyBean
swagger:model UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0
*/
type UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0 struct {

	// A unique identifier of a custom property. Is defined by the user. This field is an immutable.
	// Required: true
	Key *string `json:"key"`

	// Value of the custom property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this update tenant using p u t params body custom properties items0
func (o *UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", o.Key); err != nil {
		return err
	}

	return nil
}

func (o *UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0) UnmarshalBinary(b []byte) error {
	var res UpdateTenantUsingPUTParamsBodyCustomPropertiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
