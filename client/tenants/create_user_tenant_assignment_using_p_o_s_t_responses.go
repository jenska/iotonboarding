// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CreateUserTenantAssignmentUsingPOSTReader is a Reader for the CreateUserTenantAssignmentUsingPOST structure.
type CreateUserTenantAssignmentUsingPOSTReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateUserTenantAssignmentUsingPOSTReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateUserTenantAssignmentUsingPOSTOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateUserTenantAssignmentUsingPOSTBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewCreateUserTenantAssignmentUsingPOSTConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateUserTenantAssignmentUsingPOSTOK creates a CreateUserTenantAssignmentUsingPOSTOK with default headers values
func NewCreateUserTenantAssignmentUsingPOSTOK() *CreateUserTenantAssignmentUsingPOSTOK {
	return &CreateUserTenantAssignmentUsingPOSTOK{}
}

/*CreateUserTenantAssignmentUsingPOSTOK handles this case with default header values.

Successfully added user to tenant.
*/
type CreateUserTenantAssignmentUsingPOSTOK struct {
	Payload *CreateUserTenantAssignmentUsingPOSTOKBody
}

func (o *CreateUserTenantAssignmentUsingPOSTOK) Error() string {
	return fmt.Sprintf("[POST /v1/tenants/{tenantId}/users][%d] createUserTenantAssignmentUsingPOSTOK  %+v", 200, o.Payload)
}

func (o *CreateUserTenantAssignmentUsingPOSTOK) GetPayload() *CreateUserTenantAssignmentUsingPOSTOKBody {
	return o.Payload
}

func (o *CreateUserTenantAssignmentUsingPOSTOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateUserTenantAssignmentUsingPOSTOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserTenantAssignmentUsingPOSTBadRequest creates a CreateUserTenantAssignmentUsingPOSTBadRequest with default headers values
func NewCreateUserTenantAssignmentUsingPOSTBadRequest() *CreateUserTenantAssignmentUsingPOSTBadRequest {
	return &CreateUserTenantAssignmentUsingPOSTBadRequest{}
}

/*CreateUserTenantAssignmentUsingPOSTBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type CreateUserTenantAssignmentUsingPOSTBadRequest struct {
	Payload *CreateUserTenantAssignmentUsingPOSTBadRequestBody
}

func (o *CreateUserTenantAssignmentUsingPOSTBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/tenants/{tenantId}/users][%d] createUserTenantAssignmentUsingPOSTBadRequest  %+v", 400, o.Payload)
}

func (o *CreateUserTenantAssignmentUsingPOSTBadRequest) GetPayload() *CreateUserTenantAssignmentUsingPOSTBadRequestBody {
	return o.Payload
}

func (o *CreateUserTenantAssignmentUsingPOSTBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateUserTenantAssignmentUsingPOSTBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateUserTenantAssignmentUsingPOSTConflict creates a CreateUserTenantAssignmentUsingPOSTConflict with default headers values
func NewCreateUserTenantAssignmentUsingPOSTConflict() *CreateUserTenantAssignmentUsingPOSTConflict {
	return &CreateUserTenantAssignmentUsingPOSTConflict{}
}

/*CreateUserTenantAssignmentUsingPOSTConflict handles this case with default header values.

User is already added to tenant.
*/
type CreateUserTenantAssignmentUsingPOSTConflict struct {
	Payload *CreateUserTenantAssignmentUsingPOSTConflictBody
}

func (o *CreateUserTenantAssignmentUsingPOSTConflict) Error() string {
	return fmt.Sprintf("[POST /v1/tenants/{tenantId}/users][%d] createUserTenantAssignmentUsingPOSTConflict  %+v", 409, o.Payload)
}

func (o *CreateUserTenantAssignmentUsingPOSTConflict) GetPayload() *CreateUserTenantAssignmentUsingPOSTConflictBody {
	return o.Payload
}

func (o *CreateUserTenantAssignmentUsingPOSTConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(CreateUserTenantAssignmentUsingPOSTConflictBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*CreateUserTenantAssignmentUsingPOSTBadRequestBody Response
swagger:model CreateUserTenantAssignmentUsingPOSTBadRequestBody
*/
type CreateUserTenantAssignmentUsingPOSTBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this create user tenant assignment using p o s t bad request body
func (o *CreateUserTenantAssignmentUsingPOSTBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateUserTenantAssignmentUsingPOSTBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("createUserTenantAssignmentUsingPOSTBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateUserTenantAssignmentUsingPOSTBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateUserTenantAssignmentUsingPOSTBadRequestBody) UnmarshalBinary(b []byte) error {
	var res CreateUserTenantAssignmentUsingPOSTBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateUserTenantAssignmentUsingPOSTBody TenantUserAssignmentBean
swagger:model CreateUserTenantAssignmentUsingPOSTBody
*/
type CreateUserTenantAssignmentUsingPOSTBody struct {

	// role
	// Enum: [administrator user]
	Role string `json:"role,omitempty"`

	// user Id
	UserID string `json:"userId,omitempty"`
}

// Validate validates this create user tenant assignment using p o s t body
func (o *CreateUserTenantAssignmentUsingPOSTBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createUserTenantAssignmentUsingPOSTBodyTypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["administrator","user"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createUserTenantAssignmentUsingPOSTBodyTypeRolePropEnum = append(createUserTenantAssignmentUsingPOSTBodyTypeRolePropEnum, v)
	}
}

const (

	// CreateUserTenantAssignmentUsingPOSTBodyRoleAdministrator captures enum value "administrator"
	CreateUserTenantAssignmentUsingPOSTBodyRoleAdministrator string = "administrator"

	// CreateUserTenantAssignmentUsingPOSTBodyRoleUser captures enum value "user"
	CreateUserTenantAssignmentUsingPOSTBodyRoleUser string = "user"
)

// prop value enum
func (o *CreateUserTenantAssignmentUsingPOSTBody) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createUserTenantAssignmentUsingPOSTBodyTypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateUserTenantAssignmentUsingPOSTBody) validateRole(formats strfmt.Registry) error {

	if swag.IsZero(o.Role) { // not required
		return nil
	}

	// value enum
	if err := o.validateRoleEnum("request"+"."+"role", "body", o.Role); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateUserTenantAssignmentUsingPOSTBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateUserTenantAssignmentUsingPOSTBody) UnmarshalBinary(b []byte) error {
	var res CreateUserTenantAssignmentUsingPOSTBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateUserTenantAssignmentUsingPOSTConflictBody Response
swagger:model CreateUserTenantAssignmentUsingPOSTConflictBody
*/
type CreateUserTenantAssignmentUsingPOSTConflictBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this create user tenant assignment using p o s t conflict body
func (o *CreateUserTenantAssignmentUsingPOSTConflictBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *CreateUserTenantAssignmentUsingPOSTConflictBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("createUserTenantAssignmentUsingPOSTConflict"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateUserTenantAssignmentUsingPOSTConflictBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateUserTenantAssignmentUsingPOSTConflictBody) UnmarshalBinary(b []byte) error {
	var res CreateUserTenantAssignmentUsingPOSTConflictBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*CreateUserTenantAssignmentUsingPOSTOKBody TenantUserAssignmentBean
swagger:model CreateUserTenantAssignmentUsingPOSTOKBody
*/
type CreateUserTenantAssignmentUsingPOSTOKBody struct {

	// role
	// Enum: [administrator user]
	Role string `json:"role,omitempty"`

	// user Id
	UserID string `json:"userId,omitempty"`
}

// Validate validates this create user tenant assignment using p o s t o k body
func (o *CreateUserTenantAssignmentUsingPOSTOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var createUserTenantAssignmentUsingPOSTOKBodyTypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["administrator","user"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		createUserTenantAssignmentUsingPOSTOKBodyTypeRolePropEnum = append(createUserTenantAssignmentUsingPOSTOKBodyTypeRolePropEnum, v)
	}
}

const (

	// CreateUserTenantAssignmentUsingPOSTOKBodyRoleAdministrator captures enum value "administrator"
	CreateUserTenantAssignmentUsingPOSTOKBodyRoleAdministrator string = "administrator"

	// CreateUserTenantAssignmentUsingPOSTOKBodyRoleUser captures enum value "user"
	CreateUserTenantAssignmentUsingPOSTOKBodyRoleUser string = "user"
)

// prop value enum
func (o *CreateUserTenantAssignmentUsingPOSTOKBody) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, createUserTenantAssignmentUsingPOSTOKBodyTypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *CreateUserTenantAssignmentUsingPOSTOKBody) validateRole(formats strfmt.Registry) error {

	if swag.IsZero(o.Role) { // not required
		return nil
	}

	// value enum
	if err := o.validateRoleEnum("createUserTenantAssignmentUsingPOSTOK"+"."+"role", "body", o.Role); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *CreateUserTenantAssignmentUsingPOSTOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *CreateUserTenantAssignmentUsingPOSTOKBody) UnmarshalBinary(b []byte) error {
	var res CreateUserTenantAssignmentUsingPOSTOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
