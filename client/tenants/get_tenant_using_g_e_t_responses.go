// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"
	"strconv"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetTenantUsingGETReader is a Reader for the GetTenantUsingGET structure.
type GetTenantUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTenantUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTenantUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTenantUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTenantUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTenantUsingGETOK creates a GetTenantUsingGETOK with default headers values
func NewGetTenantUsingGETOK() *GetTenantUsingGETOK {
	return &GetTenantUsingGETOK{}
}

/*GetTenantUsingGETOK handles this case with default header values.

Successfully returned tenant.
*/
type GetTenantUsingGETOK struct {
	Payload *GetTenantUsingGETOKBody
}

func (o *GetTenantUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /v1/tenants/{tenantId}][%d] getTenantUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetTenantUsingGETOK) GetPayload() *GetTenantUsingGETOKBody {
	return o.Payload
}

func (o *GetTenantUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTenantUsingGETOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantUsingGETBadRequest creates a GetTenantUsingGETBadRequest with default headers values
func NewGetTenantUsingGETBadRequest() *GetTenantUsingGETBadRequest {
	return &GetTenantUsingGETBadRequest{}
}

/*GetTenantUsingGETBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type GetTenantUsingGETBadRequest struct {
	Payload *GetTenantUsingGETBadRequestBody
}

func (o *GetTenantUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/tenants/{tenantId}][%d] getTenantUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetTenantUsingGETBadRequest) GetPayload() *GetTenantUsingGETBadRequestBody {
	return o.Payload
}

func (o *GetTenantUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTenantUsingGETBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantUsingGETNotFound creates a GetTenantUsingGETNotFound with default headers values
func NewGetTenantUsingGETNotFound() *GetTenantUsingGETNotFound {
	return &GetTenantUsingGETNotFound{}
}

/*GetTenantUsingGETNotFound handles this case with default header values.

Tenant with specified id does not exist.
*/
type GetTenantUsingGETNotFound struct {
	Payload *GetTenantUsingGETNotFoundBody
}

func (o *GetTenantUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/tenants/{tenantId}][%d] getTenantUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetTenantUsingGETNotFound) GetPayload() *GetTenantUsingGETNotFoundBody {
	return o.Payload
}

func (o *GetTenantUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTenantUsingGETNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetTenantUsingGETBadRequestBody Response
swagger:model GetTenantUsingGETBadRequestBody
*/
type GetTenantUsingGETBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get tenant using g e t bad request body
func (o *GetTenantUsingGETBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTenantUsingGETBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getTenantUsingGETBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTenantUsingGETBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTenantUsingGETBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetTenantUsingGETBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetTenantUsingGETNotFoundBody Response
swagger:model GetTenantUsingGETNotFoundBody
*/
type GetTenantUsingGETNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get tenant using g e t not found body
func (o *GetTenantUsingGETNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTenantUsingGETNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getTenantUsingGETNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTenantUsingGETNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTenantUsingGETNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetTenantUsingGETNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetTenantUsingGETOKBody TenantBean
swagger:model GetTenantUsingGETOKBody
*/
type GetTenantUsingGETOKBody struct {

	// A set of user defined properties represented as key value pair.
	CustomProperties []*GetTenantUsingGETOKBodyCustomPropertiesItems0 `json:"customProperties"`

	// The unique identifier of the tenant generated by the system and unique across platform tenant. This field is immutable.
	// Read Only: true
	ID string `json:"id,omitempty"`

	// The name of the tenant.
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this get tenant using g e t o k body
func (o *GetTenantUsingGETOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCustomProperties(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTenantUsingGETOKBody) validateCustomProperties(formats strfmt.Registry) error {

	if swag.IsZero(o.CustomProperties) { // not required
		return nil
	}

	for i := 0; i < len(o.CustomProperties); i++ {
		if swag.IsZero(o.CustomProperties[i]) { // not required
			continue
		}

		if o.CustomProperties[i] != nil {
			if err := o.CustomProperties[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("getTenantUsingGETOK" + "." + "customProperties" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

func (o *GetTenantUsingGETOKBody) validateName(formats strfmt.Registry) error {

	if err := validate.Required("getTenantUsingGETOK"+"."+"name", "body", o.Name); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTenantUsingGETOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTenantUsingGETOKBody) UnmarshalBinary(b []byte) error {
	var res GetTenantUsingGETOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetTenantUsingGETOKBodyCustomPropertiesItems0 CustomPropertyBean
swagger:model GetTenantUsingGETOKBodyCustomPropertiesItems0
*/
type GetTenantUsingGETOKBodyCustomPropertiesItems0 struct {

	// A unique identifier of a custom property. Is defined by the user. This field is an immutable.
	// Required: true
	Key *string `json:"key"`

	// Value of the custom property.
	// Required: true
	Value *string `json:"value"`
}

// Validate validates this get tenant using g e t o k body custom properties items0
func (o *GetTenantUsingGETOKBodyCustomPropertiesItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateKey(formats); err != nil {
		res = append(res, err)
	}

	if err := o.validateValue(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTenantUsingGETOKBodyCustomPropertiesItems0) validateKey(formats strfmt.Registry) error {

	if err := validate.Required("key", "body", o.Key); err != nil {
		return err
	}

	return nil
}

func (o *GetTenantUsingGETOKBodyCustomPropertiesItems0) validateValue(formats strfmt.Registry) error {

	if err := validate.Required("value", "body", o.Value); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTenantUsingGETOKBodyCustomPropertiesItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTenantUsingGETOKBodyCustomPropertiesItems0) UnmarshalBinary(b []byte) error {
	var res GetTenantUsingGETOKBodyCustomPropertiesItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
