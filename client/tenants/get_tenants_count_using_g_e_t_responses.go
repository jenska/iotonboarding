// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetTenantsCountUsingGETReader is a Reader for the GetTenantsCountUsingGET structure.
type GetTenantsCountUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTenantsCountUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetTenantsCountUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetTenantsCountUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetTenantsCountUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetTenantsCountUsingGETOK creates a GetTenantsCountUsingGETOK with default headers values
func NewGetTenantsCountUsingGETOK() *GetTenantsCountUsingGETOK {
	return &GetTenantsCountUsingGETOK{}
}

/*GetTenantsCountUsingGETOK handles this case with default header values.

Successfully returned tenant count assignments.
*/
type GetTenantsCountUsingGETOK struct {
	Payload int64
}

func (o *GetTenantsCountUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /v1/tenants/count][%d] getTenantsCountUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetTenantsCountUsingGETOK) GetPayload() int64 {
	return o.Payload
}

func (o *GetTenantsCountUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantsCountUsingGETBadRequest creates a GetTenantsCountUsingGETBadRequest with default headers values
func NewGetTenantsCountUsingGETBadRequest() *GetTenantsCountUsingGETBadRequest {
	return &GetTenantsCountUsingGETBadRequest{}
}

/*GetTenantsCountUsingGETBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type GetTenantsCountUsingGETBadRequest struct {
	Payload *GetTenantsCountUsingGETBadRequestBody
}

func (o *GetTenantsCountUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/tenants/count][%d] getTenantsCountUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetTenantsCountUsingGETBadRequest) GetPayload() *GetTenantsCountUsingGETBadRequestBody {
	return o.Payload
}

func (o *GetTenantsCountUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTenantsCountUsingGETBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetTenantsCountUsingGETNotFound creates a GetTenantsCountUsingGETNotFound with default headers values
func NewGetTenantsCountUsingGETNotFound() *GetTenantsCountUsingGETNotFound {
	return &GetTenantsCountUsingGETNotFound{}
}

/*GetTenantsCountUsingGETNotFound handles this case with default header values.

Tenant with specified id does not exist.
*/
type GetTenantsCountUsingGETNotFound struct {
	Payload *GetTenantsCountUsingGETNotFoundBody
}

func (o *GetTenantsCountUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/tenants/count][%d] getTenantsCountUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetTenantsCountUsingGETNotFound) GetPayload() *GetTenantsCountUsingGETNotFoundBody {
	return o.Payload
}

func (o *GetTenantsCountUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetTenantsCountUsingGETNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetTenantsCountUsingGETBadRequestBody Response
swagger:model GetTenantsCountUsingGETBadRequestBody
*/
type GetTenantsCountUsingGETBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get tenants count using g e t bad request body
func (o *GetTenantsCountUsingGETBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTenantsCountUsingGETBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getTenantsCountUsingGETBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTenantsCountUsingGETBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTenantsCountUsingGETBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetTenantsCountUsingGETBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetTenantsCountUsingGETNotFoundBody Response
swagger:model GetTenantsCountUsingGETNotFoundBody
*/
type GetTenantsCountUsingGETNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get tenants count using g e t not found body
func (o *GetTenantsCountUsingGETNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetTenantsCountUsingGETNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getTenantsCountUsingGETNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetTenantsCountUsingGETNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetTenantsCountUsingGETNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetTenantsCountUsingGETNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
