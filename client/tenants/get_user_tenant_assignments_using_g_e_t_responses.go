// Code generated by go-swagger; DO NOT EDIT.

package tenants

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// GetUserTenantAssignmentsUsingGETReader is a Reader for the GetUserTenantAssignmentsUsingGET structure.
type GetUserTenantAssignmentsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserTenantAssignmentsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetUserTenantAssignmentsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetUserTenantAssignmentsUsingGETBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewGetUserTenantAssignmentsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGetUserTenantAssignmentsUsingGETOK creates a GetUserTenantAssignmentsUsingGETOK with default headers values
func NewGetUserTenantAssignmentsUsingGETOK() *GetUserTenantAssignmentsUsingGETOK {
	return &GetUserTenantAssignmentsUsingGETOK{}
}

/*GetUserTenantAssignmentsUsingGETOK handles this case with default header values.

Successfully returned tenant user assignments.
*/
type GetUserTenantAssignmentsUsingGETOK struct {
	Payload []*GetUserTenantAssignmentsUsingGETOKBodyItems0
}

func (o *GetUserTenantAssignmentsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /v1/tenants/{tenantId}/users][%d] getUserTenantAssignmentsUsingGETOK  %+v", 200, o.Payload)
}

func (o *GetUserTenantAssignmentsUsingGETOK) GetPayload() []*GetUserTenantAssignmentsUsingGETOKBodyItems0 {
	return o.Payload
}

func (o *GetUserTenantAssignmentsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTenantAssignmentsUsingGETBadRequest creates a GetUserTenantAssignmentsUsingGETBadRequest with default headers values
func NewGetUserTenantAssignmentsUsingGETBadRequest() *GetUserTenantAssignmentsUsingGETBadRequest {
	return &GetUserTenantAssignmentsUsingGETBadRequest{}
}

/*GetUserTenantAssignmentsUsingGETBadRequest handles this case with default header values.

HTTP request is malformed.
*/
type GetUserTenantAssignmentsUsingGETBadRequest struct {
	Payload *GetUserTenantAssignmentsUsingGETBadRequestBody
}

func (o *GetUserTenantAssignmentsUsingGETBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/tenants/{tenantId}/users][%d] getUserTenantAssignmentsUsingGETBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserTenantAssignmentsUsingGETBadRequest) GetPayload() *GetUserTenantAssignmentsUsingGETBadRequestBody {
	return o.Payload
}

func (o *GetUserTenantAssignmentsUsingGETBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserTenantAssignmentsUsingGETBadRequestBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserTenantAssignmentsUsingGETNotFound creates a GetUserTenantAssignmentsUsingGETNotFound with default headers values
func NewGetUserTenantAssignmentsUsingGETNotFound() *GetUserTenantAssignmentsUsingGETNotFound {
	return &GetUserTenantAssignmentsUsingGETNotFound{}
}

/*GetUserTenantAssignmentsUsingGETNotFound handles this case with default header values.

Tenant with specified id does not exist.
*/
type GetUserTenantAssignmentsUsingGETNotFound struct {
	Payload *GetUserTenantAssignmentsUsingGETNotFoundBody
}

func (o *GetUserTenantAssignmentsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/tenants/{tenantId}/users][%d] getUserTenantAssignmentsUsingGETNotFound  %+v", 404, o.Payload)
}

func (o *GetUserTenantAssignmentsUsingGETNotFound) GetPayload() *GetUserTenantAssignmentsUsingGETNotFoundBody {
	return o.Payload
}

func (o *GetUserTenantAssignmentsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(GetUserTenantAssignmentsUsingGETNotFoundBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*GetUserTenantAssignmentsUsingGETBadRequestBody Response
swagger:model GetUserTenantAssignmentsUsingGETBadRequestBody
*/
type GetUserTenantAssignmentsUsingGETBadRequestBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get user tenant assignments using g e t bad request body
func (o *GetUserTenantAssignmentsUsingGETBadRequestBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserTenantAssignmentsUsingGETBadRequestBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getUserTenantAssignmentsUsingGETBadRequest"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserTenantAssignmentsUsingGETBadRequestBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserTenantAssignmentsUsingGETBadRequestBody) UnmarshalBinary(b []byte) error {
	var res GetUserTenantAssignmentsUsingGETBadRequestBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUserTenantAssignmentsUsingGETNotFoundBody Response
swagger:model GetUserTenantAssignmentsUsingGETNotFoundBody
*/
type GetUserTenantAssignmentsUsingGETNotFoundBody struct {

	// message
	// Required: true
	Message *string `json:"message"`
}

// Validate validates this get user tenant assignments using g e t not found body
func (o *GetUserTenantAssignmentsUsingGETNotFoundBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateMessage(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *GetUserTenantAssignmentsUsingGETNotFoundBody) validateMessage(formats strfmt.Registry) error {

	if err := validate.Required("getUserTenantAssignmentsUsingGETNotFound"+"."+"message", "body", o.Message); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserTenantAssignmentsUsingGETNotFoundBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserTenantAssignmentsUsingGETNotFoundBody) UnmarshalBinary(b []byte) error {
	var res GetUserTenantAssignmentsUsingGETNotFoundBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*GetUserTenantAssignmentsUsingGETOKBodyItems0 TenantUserAssignmentBean
swagger:model GetUserTenantAssignmentsUsingGETOKBodyItems0
*/
type GetUserTenantAssignmentsUsingGETOKBodyItems0 struct {

	// role
	// Enum: [administrator user]
	Role string `json:"role,omitempty"`

	// user Id
	UserID string `json:"userId,omitempty"`
}

// Validate validates this get user tenant assignments using g e t o k body items0
func (o *GetUserTenantAssignmentsUsingGETOKBodyItems0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var getUserTenantAssignmentsUsingGETOKBodyItems0TypeRolePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["administrator","user"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		getUserTenantAssignmentsUsingGETOKBodyItems0TypeRolePropEnum = append(getUserTenantAssignmentsUsingGETOKBodyItems0TypeRolePropEnum, v)
	}
}

const (

	// GetUserTenantAssignmentsUsingGETOKBodyItems0RoleAdministrator captures enum value "administrator"
	GetUserTenantAssignmentsUsingGETOKBodyItems0RoleAdministrator string = "administrator"

	// GetUserTenantAssignmentsUsingGETOKBodyItems0RoleUser captures enum value "user"
	GetUserTenantAssignmentsUsingGETOKBodyItems0RoleUser string = "user"
)

// prop value enum
func (o *GetUserTenantAssignmentsUsingGETOKBodyItems0) validateRoleEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, getUserTenantAssignmentsUsingGETOKBodyItems0TypeRolePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (o *GetUserTenantAssignmentsUsingGETOKBodyItems0) validateRole(formats strfmt.Registry) error {

	if swag.IsZero(o.Role) { // not required
		return nil
	}

	// value enum
	if err := o.validateRoleEnum("role", "body", o.Role); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (o *GetUserTenantAssignmentsUsingGETOKBodyItems0) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *GetUserTenantAssignmentsUsingGETOKBodyItems0) UnmarshalBinary(b []byte) error {
	var res GetUserTenantAssignmentsUsingGETOKBodyItems0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
